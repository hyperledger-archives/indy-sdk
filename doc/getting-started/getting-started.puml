@startuml

box "Alice" #LightBlue
actor "Agent" as A
participant "Wallet" as AW
endbox

box "Faber College" #LightYellow
actor "Agent" as F
participant "Wallet" as FW
endbox

box "Acme Corp" #LightBlue
actor "Agent" as AC
participant "Wallet" as ACW
endbox

box "Thrift Bank" #LightYellow
actor "Agent" as T
participant "Wallet" as TW
endbox

participant "Ledger" as L

box "Government" #LightBlue
actor "Agent" as G
participant "Wallet" as GW
endbox

box "Sovrin Steward" #LightYellow
actor "Agent" as S
participant "Wallet" as SW
endbox

=== Getting Trust Anchor credentials for Faber, Acme, Thrift and Government  ==
S->SW: Create "Sovrin Steward" wallet
S->SW: Create and store "Sovrin Steward" DID from seed

== Getting Trust Anchor credentials - Government Onboarding  ==
S->SW: Create and store "Sovrin Steward Government Pairwise" DID
S->L: Send Nym for "Sovrin Steward Government Pairwise" DID
S->G: Connection request with "Sovrin Steward Government Pairwise" DID and nonce
G->GW: Create "Government" wallet
G->GW: Create and store "Government Sovrin Steward Pairwise" DID
G->S: Send anoncrypted connection response with "Government Sovrin Steward Pairwise" DID, verkey and nonce
S->L: Send Nym for "Government Sovrin Steward Pairwise" DID

== Getting Trust Anchor credentials - Government getting Verinym  ==
G->GW: Create and store "Government" DID
G->S: Send authcrypted "Government" DID
S->L: Send Nym for "Government" DID with Trust Anchor Role

== Getting Trust Anchor credentials - Faber Onboarding  ==
S->SW: Create and store "Sovrin Steward Faber Pairwise" DID
S->L: Send Nym for "Sovrin Steward Faber Pairwise" DID
S->F: Connection request with "Sovrin Steward Faber Pairwise" DID and nonce
F->FW: Create "Faber" wallet
F->FW: Create and store "Faber Sovrin Steward Pairwise" DID
F->S: Send anoncrypted connection response with "Faber Sovrin Steward Pairwise" DID, verkey and nonce
S->L: Send Nym for "Faber Sovrin Steward Pairwise" DID

== Getting Trust Anchor credentials - Faber getting Verinym  ==
F->FW: Create and store "Faber" DID
F->S: Send authcrypted "Faber" DID
S->L: Send Nym for "Faber" DID with Trust Anchor Role

== Getting Trust Anchor credentials - Acme Onboarding  ==
S->SW: Create and store "Sovrin Steward Acme Pairwise" DID
S->L: Send Nym for "Sovrin Steward Acme Pairwise" DID
S->AC: Connection request with "Sovrin Steward Acme Pairwise" DID and nonce
AC->ACW: Create "Acme" wallet
AC->ACW: Create and store "Acme Sovrin Steward Pairwise" DID
AC->S: Send anoncrypted connection response with "Acme Sovrin Steward Pairwise" DID, verkey and nonce
S->L: Send Nym for "Acme Sovrin Steward Pairwise" DID

== Getting Trust Anchor credentials - Acme getting Verinym  ==
AC->ACW: Create and store "Acme" DID
AC->S: Send authcrypted "Acme" DID
S->L: Send Nym for "Acme" DID with Trust Anchor Role

== Getting Trust Anchor credentials - Thrift Onboarding  ==
S->SW: Create and store "Sovrin Steward Thrift Pairwise" DID
S->L: Send Nym for "Sovrin Steward Thrift Pairwise" DID
S->T: Connection request with "Sovrin Steward Thrift Pairwise" DID and nonce
T->TW: Create "Thrift" wallet
T->TW: Create and store "Thrift Sovrin Steward Pairwise" DID
T->S: Send anoncrypted connection response with "Thrift Sovrin Steward Pairwise" DID, verkey and nonce
S->L: Send Nym for "Thrift Sovrin Steward Pairwise" DID

== Getting Trust Anchor credentials - Thrift getting Verinym  ==
T->TW: Create and store "Thrift" DID
T->S: Send authcrypted "Thrift" DID Info
S->L: Send Nym for "Thrift" DID with Trust Anchor Role

=== Claim Schemas Setup ==
G->GW: Create and store "Government Schema Issuer" DID
G->L: Send Nym for "Government Schema Issuer" DID
G->L: Send Schema for "Job-Certificate" Schema
G->L: Send Schema for "Transcript" Schema

=== Faber Claim Definition Setup ==
F->FW: Create and store "Faber Claim Issuer" DID
F->L: Send Nym for "Faber Claim Issuer" DID
F->L: Send GetSchema for "Transcript" Schema
F->FW: Create and store "Faber Transcript" Claim Definition
F->L: Send ClaimDef for "Faber Transcript" Claim Defition

=== Acme Claim Definition Setup ==
AC->ACW: Create and store "Acme Claim Issuer" DID
AC->L: Send Nym for "Acme Claim Issuer" DID
AC->L: Send GetSchema for "Job-Certificate" Schema
AC->ACW: Create and store "Acme Job-Certificate" Claim Definition
AC->L: Send ClaimDef for "Acme Job-Certificate" Claim Definition

=== Getting Transcript with Faber ==
== Getting Transcript with Faber - Onboarding ==
F->FW: Create and store "Faber Alice Pairwise" DID
F->L: Send Nym for "Faber Alice Pairwise" DID
F->A: Connection request with "Faber Alice Pairwise" DID and nonce
A->AW: Create "Alice" wallet
A->AW: Create and store "Alice Faber Pairwise" DID
A->F: Anoncrypted connection response with "Alice Faber Pairwise" DID, verkey and nonce
F->L: Send Nym for "Alice Faber Pairwise" DID

== Getting Transcript with Faber - Getting Transcript Claim ==
F->A: Send authcrypted "Alice Faber Transcript" Claim Offer
A->AW: Store "Alice Faber Transcript" Claim Offer
A->AW: Create and store "Alice" Master Secret
A->L: Send GetSchema for "Transcript" Schema
A->L: Send GetClaimDef for "Faber Transcript" Claim Definition
A->AW: Create and store "Alice Faber Transcript" Claim Request
A->F: Send authcrypted "Alice Faber Transcript" Claim Request
F->F: Create "Alice Faber Transcript" Claim
F->A: Send authcrypted "Alice Faber Transcript" Claim
A->AW: Store "Alice Faber Transcript" Claim

=== Apply for the job with Acme ==
== Apply for the job with Acme - Onboarding ==
AC->ACW: Create and store "Acme Alice Pairwise" DID
AC->L: Send Nym for "Acme Alice Pairwise" DID
AC->A: Connection request with "Acme Alice Pairwise" DID and nonce
A->AW: Create and store "Alice Acme Pairwise" DID
A->AC: Anoncrypted connection response with "Alice Acme Pairwise" DID, verkey and nonce
AC->L: Send Nym for "Alice Acme Pairwise" DID

== Apply for the job with Acme - Job-Application proving ==
AC->A: Send authcrypted "Job-Application" Proof Request
A->AW: Get claims for "Job-Application" Proof Request
AW->A: "Alice Faber Transcript" Claim
A->L: Send GetSchema for "Transcript" Schema
A->L: Send GetClaimDef for "Faber Transcript" Claim Definition
A->A: Create "Alice Job-Application" Proof
A->AC: Send authcrypted "Alice Job-Application" Proof
AC->L: Send GetSchema for "Transcript" Schema
AC->L: Send GetClaimDef for "Faber Transcript" Claim Definition
AC->AC: Verify "Alice Job-Application" Proof

== Apply for the job with Acme - Getting Job-Certificate Claim ==
AC->A: Send authcrypted "Alice Acme Job-Certificate" Claim Offer
A->AW: Store "Alice Acme Job-Certificate" Claim Offer
A->L: Send GetSchema for "Job-Certificate" Schema
A->L: Send GetClaimDef for "Acme Job-Certificate" Claim Definition
A->AW: Create and store "Alice Acme Job-Certificate" Claim Request
A->AC: Send authcrypted "Alice Acme Job-Certificate" Claim Request
AC->AC: Create "Alice Acme Job-Certificate" Claim
F->A: Send authcrypted "Alice Acme Job-Certificate" Claim
A->AW: Store "Alice Acme Job-Certificate" Claim

=== Apply for the loan with Thrift ==
== Apply for the loan with Thrift - Onboarding ==
T->TW: Create and store "Thrift Alice Pairwise" DID
T->L: Send Nym for "Thrift Alice Pairwise" DID
T->A: Connection request with "Thrift Alice Pairwise" DID and nonce
A->AW: Create and store "Alice Thrift Pairwise" DID
A->T: Anoncrypted connection response with "Alice Thrift Pairwise" DID, verkey and nonce
T->L: Send Nym for "Alice Thrift Pairwise" DID

== Apply for the loan with Thrift - Employment History proving  ==
T->A: Send authcrypted "Loan-Application-Basic" Proof Request
A->AW: Get claims for "Loan-Application-Basic" Proof Request
AW->A: "Alice Acme Job-Certificate" Claim
A->L: Send GetSchema for "Job-Certificate" Schema
A->L: Send GetClaimDef for "Acme Job-Certificate" Claim Definition
A->A: Create "Loan-Application-Basic" Proof
A->T: Send "Loan-Application-Basic" Proof
T->L: Send GetSchema for "Job-Certificate" Schema
T->L: Send GetClaimDef for "Acme Job-Certificate" Claim Definition
T->T: Verify "Loan-Application-Basic" Proof

== Apply for the loan with Thrift - Loan-Application-KYC proving  ==
T->A: Send authcrypted "Loan-Application-KYC" Proof Request
A->AW: Get claims for "Loan-Application-KYC" Proof Request
AW->A: "Alice Faber Transcript and Alice Acme ob-Certificate" Claim
A->L: Send GetSchema for "Transcript" Schema
A->L: Send GetClaimDef for "Faber Transcript" Claim Definition
A->L: Send GetSchema for "Job-Certificate" Schema
A->L: Send GetClaimDef for "Acme Job-Certificate" Claim Definition
A->A: Create "Loan-Application-KYC" Proof
A->T: Send "Loan-Application-KYC" Proof
T->L: Send GetSchema for "Transcript" Schema
T->L: Send GetClaimDef for "Faber Transcript" Claim Definition
T->L: Send GetSchema for "Job-Certificate" Schema
T->L: Send GetClaimDef for "Acme Job-Certificate" Claim Definition
T->T: Verify "Loan-Application-KYC" Proof

@enduml