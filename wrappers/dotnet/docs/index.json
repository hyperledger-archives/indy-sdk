{
  "api/Hyperledger.Indy.AnonCredsApi.ClaimRevokedException.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.ClaimRevokedException.html",
    "title": "Class ClaimRevokedException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class ClaimRevokedException Exception thrown when a claim has been revoked. Inheritance System.Exception IndyException ClaimRevokedException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class ClaimRevokedException : IndyException"
  },
  "api/Hyperledger.Indy.LedgerApi.InvalidLedgerTransactionException.html": {
    "href": "api/Hyperledger.Indy.LedgerApi.InvalidLedgerTransactionException.html",
    "title": "Class InvalidLedgerTransactionException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class InvalidLedgerTransactionException Exception thrown when attempting to send an unknown or incomplete ledger message. Inheritance System.Exception IndyException InvalidLedgerTransactionException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.LedgerApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class InvalidLedgerTransactionException : IndyException"
  },
  "api/Hyperledger.Indy.PairwiseApi.html": {
    "href": "api/Hyperledger.Indy.PairwiseApi.html",
    "title": "Namespace Hyperledger.Indy.PairwiseApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.PairwiseApi Classes Pairwise Provides methods for managing pairwise identifiers."
  },
  "api/Hyperledger.Indy.PaymentsApi.PaymentMethod.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.PaymentMethod.html",
    "title": "Class PaymentMethod | Hyperledger Indy .NET Wrapper",
    "keywords": "Class PaymentMethod Inheritance System.Object PaymentMethod Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public abstract class PaymentMethod : Object Constructors PaymentMethod() Declaration protected PaymentMethod() Methods AddRequestFeesAsync(String, String, String, String) Declaration public abstract Task<string> AddRequestFeesAsync(string submitterDid, string reqJson, string inputsJson, string outputsJson) Parameters Type Name Description System.String submitterDid System.String reqJson System.String inputsJson System.String outputsJson Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetTxnFeesAsync(String) Declaration public abstract Task<string> BuildGetTxnFeesAsync(string submitterDid) Parameters Type Name Description System.String submitterDid Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetUtxoRequestAsync(String, String) Declaration public abstract Task<string> BuildGetUtxoRequestAsync(string submittedDid, string paymentAddress) Parameters Type Name Description System.String submittedDid System.String paymentAddress Returns Type Description System.Threading.Tasks.Task < System.String > BuildMintRequestAsync(String, String) Declaration public abstract Task<string> BuildMintRequestAsync(string submitterDid, string outputsJson) Parameters Type Name Description System.String submitterDid System.String outputsJson Returns Type Description System.Threading.Tasks.Task < System.String > BuildPaymentRequestAsync(String, String, String) Declaration public abstract Task<string> BuildPaymentRequestAsync(string submitterDid, string inputsJson, string outputsJson) Parameters Type Name Description System.String submitterDid System.String inputsJson System.String outputsJson Returns Type Description System.Threading.Tasks.Task < System.String > BuildSetTxnFeesAsync(String, String) Declaration public abstract Task<string> BuildSetTxnFeesAsync(string submitterDid, string feesJson) Parameters Type Name Description System.String submitterDid System.String feesJson Returns Type Description System.Threading.Tasks.Task < System.String > CreatePaymentAddressAsync(String) Declaration public abstract Task<string> CreatePaymentAddressAsync(string config) Parameters Type Name Description System.String config Returns Type Description System.Threading.Tasks.Task < System.String > ParseGetTxnFeesResponseAsync(String) Declaration public abstract Task<string> ParseGetTxnFeesResponseAsync(string responseJson) Parameters Type Name Description System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String > ParseGetUtxoResponseAsync(String) Declaration public abstract Task<string> ParseGetUtxoResponseAsync(string responseJson) Parameters Type Name Description System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String > ParsePaymentResponseAsync(String) Declaration public abstract Task<string> ParsePaymentResponseAsync(string responseJson) Parameters Type Name Description System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String > ParseResponseWithFeesAsync(String) Declaration public abstract Task<string> ParseResponseWithFeesAsync(string responseJson) Parameters Type Name Description System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String >"
  },
  "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateAndStoreRevocRegResult.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateAndStoreRevocRegResult.html",
    "title": "Class IssuerCreateAndStoreRevocRegResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class IssuerCreateAndStoreRevocRegResult Inheritance System.Object IssuerCreateAndStoreRevocRegResult Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class IssuerCreateAndStoreRevocRegResult : Object Constructors IssuerCreateAndStoreRevocRegResult(String, String, String) Declaration public IssuerCreateAndStoreRevocRegResult(string revRegId, string revRegDefJson, string revRegEntryJson) Parameters Type Name Description System.String revRegId System.String revRegDefJson System.String revRegEntryJson Properties RevRegDefJson Declaration public string RevRegDefJson { get; } Property Value Type Description System.String RevRegEntryJson Declaration public string RevRegEntryJson { get; } Property Value Type Description System.String RevRegId Declaration public string RevRegId { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.html": {
    "href": "api/Hyperledger.Indy.html",
    "title": "Namespace Hyperledger.Indy | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy Classes ErrorCode Error codes IndyException Exception indicating a problem originating from the Indy SDK. InvalidParameterException Exception indicating that one of the parameters provided to an SDK call contained a valid that was considered invalid. InvalidStateException Exception indicating that the SDK library experienced an unexpected internal error. InvalidStructureException Exception indicating that a value being processed was not considered a valid value. IOException Exception indicating that an IO error occurred."
  },
  "api/Hyperledger.Indy.AnonCredsApi.InvalidUserRevocIndexException.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.InvalidUserRevocIndexException.html",
    "title": "Class InvalidUserRevocIndexException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class InvalidUserRevocIndexException Exception thrown when an invalid user revocation registry index is used. Inheritance System.Exception IndyException InvalidUserRevocIndexException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class InvalidUserRevocIndexException : IndyException"
  },
  "api/Hyperledger.Indy.IOException.html": {
    "href": "api/Hyperledger.Indy.IOException.html",
    "title": "Class IOException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class IOException Exception indicating that an IO error occurred. Inheritance System.Exception IndyException IOException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy Assembly : Hyperledger.Indy.Sdk.dll Syntax public class IOException : IndyException"
  },
  "api/Hyperledger.Indy.LedgerApi.LedgerSecurityException.html": {
    "href": "api/Hyperledger.Indy.LedgerApi.LedgerSecurityException.html",
    "title": "Class LedgerSecurityException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class LedgerSecurityException Exception thrown when attempting to send a transaction without the necessary privileges. Inheritance System.Exception IndyException LedgerSecurityException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.LedgerApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class LedgerSecurityException : IndyException"
  },
  "api/Hyperledger.Indy.PoolApi.PoolConfigNotCreatedException.html": {
    "href": "api/Hyperledger.Indy.PoolApi.PoolConfigNotCreatedException.html",
    "title": "Class PoolConfigNotCreatedException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class PoolConfigNotCreatedException Exception thrown when attempting to open pool which does not yet have a created configuration. Inheritance System.Exception IndyException PoolConfigNotCreatedException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.PoolApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class PoolConfigNotCreatedException : IndyException"
  },
  "api/Hyperledger.Indy.WalletApi.WrongWalletForPoolException.html": {
    "href": "api/Hyperledger.Indy.WalletApi.WrongWalletForPoolException.html",
    "title": "Class WrongWalletForPoolException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class WrongWalletForPoolException Exception thrown when attempting to use a wallet with the wrong pool. Inheritance System.Exception IndyException WrongWalletForPoolException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class WrongWalletForPoolException : IndyException"
  },
  "api/Hyperledger.Indy.AnonCredsApi.ProofRejectedException.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.ProofRejectedException.html",
    "title": "Class ProofRejectedException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class ProofRejectedException Exception thrown when a proof has been rejected. Inheritance System.Exception IndyException ProofRejectedException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class ProofRejectedException : IndyException"
  },
  "api/Hyperledger.Indy.AnonCredsApi.ProverCreateCredentialRequestResult.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.ProverCreateCredentialRequestResult.html",
    "title": "Class ProverCreateCredentialRequestResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class ProverCreateCredentialRequestResult Inheritance System.Object ProverCreateCredentialRequestResult Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class ProverCreateCredentialRequestResult : Object Constructors ProverCreateCredentialRequestResult(String, String) Declaration public ProverCreateCredentialRequestResult(string credentialRequestJson, string credentialRequestMetadataJson) Parameters Type Name Description System.String credentialRequestJson System.String credentialRequestMetadataJson Properties CredentialRequestJson Declaration public string CredentialRequestJson { get; } Property Value Type Description System.String CredentialRequestMetadataJson Declaration public string CredentialRequestMetadataJson { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.BlobStorageApi.BlobStorage.html": {
    "href": "api/Hyperledger.Indy.BlobStorageApi.BlobStorage.html",
    "title": "Class BlobStorage | Hyperledger Indy .NET Wrapper",
    "keywords": "Class BlobStorage Inheritance System.Object BlobStorage Namespace : Hyperledger.Indy.BlobStorageApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public static class BlobStorage : Object Methods OpenReaderAsync(String, String) Declaration public static Task<BlobStorageReader> OpenReaderAsync(string type, string configJson) Parameters Type Name Description System.String type System.String configJson Returns Type Description System.Threading.Tasks.Task < BlobStorageReader > OpenWriterAsync(String, String) Declaration public static Task<BlobStorageWriter> OpenWriterAsync(string type, string configJson) Parameters Type Name Description System.String type System.String configJson Returns Type Description System.Threading.Tasks.Task < BlobStorageWriter >"
  },
  "api/Hyperledger.Indy.DidApi.Did.html": {
    "href": "api/Hyperledger.Indy.DidApi.Did.html",
    "title": "Class Did | Hyperledger Indy .NET Wrapper",
    "keywords": "Class Did Inheritance System.Object Did Namespace : Hyperledger.Indy.DidApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public static class Did : Object Methods AbbreviateVerkeyAsync(String, String) Declaration public static Task<string> AbbreviateVerkeyAsync(string did, string fullVerkey) Parameters Type Name Description System.String did System.String fullVerkey Returns Type Description System.Threading.Tasks.Task < System.String > CreateAndStoreMyDidAsync(Wallet, String) Declaration public static Task<CreateAndStoreMyDidResult> CreateAndStoreMyDidAsync(Wallet wallet, string didJson) Parameters Type Name Description Wallet wallet System.String didJson Returns Type Description System.Threading.Tasks.Task < CreateAndStoreMyDidResult > GetDidMetadataAsync(Wallet, String) Declaration public static Task<string> GetDidMetadataAsync(Wallet wallet, string did) Parameters Type Name Description Wallet wallet System.String did Returns Type Description System.Threading.Tasks.Task < System.String > GetEndpointForDidAsync(Wallet, Pool, String) Declaration public static Task<EndpointForDidResult> GetEndpointForDidAsync(Wallet wallet, Pool pool, string did) Parameters Type Name Description Wallet wallet Pool pool System.String did Returns Type Description System.Threading.Tasks.Task < EndpointForDidResult > GetMyDidWithMetaAsync(Wallet, String) Declaration public static Task<string> GetMyDidWithMetaAsync(Wallet wallet, string myDid) Parameters Type Name Description Wallet wallet System.String myDid Returns Type Description System.Threading.Tasks.Task < System.String > KeyForDidAsync(Pool, Wallet, String) Declaration public static Task<string> KeyForDidAsync(Pool pool, Wallet wallet, string did) Parameters Type Name Description Pool pool Wallet wallet System.String did Returns Type Description System.Threading.Tasks.Task < System.String > KeyForLocalDidAsync(Wallet, String) Declaration public static Task<string> KeyForLocalDidAsync(Wallet wallet, string did) Parameters Type Name Description Wallet wallet System.String did Returns Type Description System.Threading.Tasks.Task < System.String > ListMyDidsWithMetaAsync(Wallet) Declaration public static Task<string> ListMyDidsWithMetaAsync(Wallet wallet) Parameters Type Name Description Wallet wallet Returns Type Description System.Threading.Tasks.Task < System.String > ReplaceKeysApplyAsync(Wallet, String) Declaration public static Task ReplaceKeysApplyAsync(Wallet wallet, string did) Parameters Type Name Description Wallet wallet System.String did Returns Type Description System.Threading.Tasks.Task ReplaceKeysStartAsync(Wallet, String, String) Declaration public static Task<string> ReplaceKeysStartAsync(Wallet wallet, string did, string identityJson) Parameters Type Name Description Wallet wallet System.String did System.String identityJson Returns Type Description System.Threading.Tasks.Task < System.String > SetDidMetadataAsync(Wallet, String, String) Declaration public static Task SetDidMetadataAsync(Wallet wallet, string did, string metadata) Parameters Type Name Description Wallet wallet System.String did System.String metadata Returns Type Description System.Threading.Tasks.Task SetEndpointForDidAsync(Wallet, String, String, String) Declaration public static Task SetEndpointForDidAsync(Wallet wallet, string did, string address, string transportKey) Parameters Type Name Description Wallet wallet System.String did System.String address System.String transportKey Returns Type Description System.Threading.Tasks.Task StoreTheirDidAsync(Wallet, String) Declaration public static Task StoreTheirDidAsync(Wallet wallet, string identityJson) Parameters Type Name Description Wallet wallet System.String identityJson Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Hyperledger.Indy.PairwiseApi.Pairwise.html": {
    "href": "api/Hyperledger.Indy.PairwiseApi.Pairwise.html",
    "title": "Class Pairwise | Hyperledger Indy .NET Wrapper",
    "keywords": "Class Pairwise Provides methods for managing pairwise identifiers. Inheritance System.Object Pairwise Namespace : Hyperledger.Indy.PairwiseApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public static class Pairwise : Object Remarks A Pairwise is a record of the relationship between a DID owned by the caller of the API and one belonging to another party, referred to respectively in this API as myDID and theirDID . Pairwise records can also hold additional optional metadata. Methods CreateAsync(Wallet, String, String, String) Creates a new pairwise record between two specified DIDs in the provided wallet. Declaration public static Task CreateAsync(Wallet wallet, string theirDid, string myDid, string metadata) Parameters Type Name Description Wallet wallet The wallet to store create the pairwise record in. System.String theirDid The DID of the remote party. System.String myDid The DID belonging to the owner of the wallet. System.String metadata Optional metadata to store with the record. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task completes once the operation completes. GetAsync(Wallet, String) Gets the pairwise record associated with the specified DID from the provided wallet. Declaration public static Task<string> GetAsync(Wallet wallet, string theirDid) Parameters Type Name Description Wallet wallet The wallet to get the pairwise record from. System.String theirDid The DID belonging to another party to get the pairwise record for. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a JSON string containing a pairwise record. Remarks The JSON string that this method resolves to will contain a single pairwise record for two DIDs, the DID belonging to the record owner (my_did), the associated DID belonging to the other party (their_did) and any metadata associated with the record (metadata). [ {\"my_did\":\"my_did_for_A\",\"their_did\":\"A's_did_for_me\",\"metadata\":\"some metadata\"}, {\"my_did\":\"my_did_for_B\",\"their_did\":\"B's_did_for_me\"} ... ] Note that if no metadata is present in a record the JSON will omit the metadata key. IsExistsAsync(Wallet, String) Gets whether or not a pairwise record exists in the provided wallet for the specified DID . Declaration public static Task<bool> IsExistsAsync(Wallet wallet, string theirDid) Parameters Type Name Description Wallet wallet The wallet to check for a pairwise record. System.String theirDid The DID to check. Returns Type Description System.Threading.Tasks.Task < System.Boolean > An asynchronous System.Threading.Tasks.Task<> that resolves to true if a pairwise exists for the DID, otherwise false. ListAsync(Wallet) Lists all pairwise relationships stored in the specified wallet. Declaration public static Task<string> ListAsync(Wallet wallet) Parameters Type Name Description Wallet wallet The wallet to get the pairwise records from. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a JSON string containing an array of all pairwise relationships stored in the wallet. Remarks The JSON string that this method resolves to will contain a array of objects each of which describes a pairwise record for two DIDs, a DID belonging to the record owner (my_did) and the associated DID belonging to the other party (their_did). [ {\"my_did\":\"my_did_for_A\",\"their_did\":\"A's_did_for_me\"}, {\"my_did\":\"my_did_for_B\",\"their_did\":\"B's_did_for_me\"} ... ] Note that this call does not return any metadata associated with the pairwise records; to get the metadata use the GetAsync(Wallet, String) method. SetMetadataAsync(Wallet, String, String) Sets the metadata on the existing pairwise record for the specified DID in the provided wallet. Declaration public static Task SetMetadataAsync(Wallet wallet, string theirDid, string metadata) Parameters Type Name Description Wallet wallet The wallet containing the pairwise record. System.String theirDid The DID belonging to another party the pairwise record exists for. System.String metadata The metadata to set on the pairwise record. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task completes once the operation completes. Remarks If the pairwise record already contains any existing metadata it will be replaced with the value provided in the metadata parameter. To remove all metadata for a record provide null in the metadata parameter."
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildSetTxnFeesReqDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildSetTxnFeesReqDelegate.html",
    "title": "Class NativeMethods.BuildSetTxnFeesReqDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.BuildSetTxnFeesReqDelegate Inheritance System.MulticastDelegate NativeMethods.BuildSetTxnFeesReqDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class BuildSetTxnFeesReqDelegate : MulticastDelegate Constructors BuildSetTxnFeesReqDelegate(Object, IntPtr) Declaration public BuildSetTxnFeesReqDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string set_txn_fees_json, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String set_txn_fees_json System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String) Declaration public virtual void Invoke(int command_handle, int err, string set_txn_fees_json) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String set_txn_fees_json"
  },
  "api/Hyperledger.Indy.PaymentsApi.PaymentResult.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.PaymentResult.html",
    "title": "Class PaymentResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class PaymentResult Inheritance System.Object PaymentResult Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class PaymentResult : Object Constructors PaymentResult(String, String) Declaration public PaymentResult(string result, string paymentMethod) Parameters Type Name Description System.String result System.String paymentMethod Properties PaymentMethod Declaration public string PaymentMethod { get; } Property Value Type Description System.String Result Declaration public string Result { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.AnonCredsApi.AnonCreds.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.AnonCreds.html",
    "title": "Class AnonCreds | Hyperledger Indy .NET Wrapper",
    "keywords": "Class AnonCreds Provides methods for managing anonymous credentials. Inheritance System.Object AnonCreds Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public static class AnonCreds : Object Methods CreateRevocationStateAsync(BlobStorageReader, String, String, Int64, String) Declaration public static Task<string> CreateRevocationStateAsync(BlobStorageReader blobStorageReader, string revRegDef, string revRegDelta, long timestamp, string credRevId) Parameters Type Name Description BlobStorageReader blobStorageReader System.String revRegDef System.String revRegDelta System.Int64 timestamp System.String credRevId Returns Type Description System.Threading.Tasks.Task < System.String > IssuerCreateAndStoreCredentialDefAsync(Wallet, String, String, String, String, String) Declaration public static Task<IssuerCreateAndStoreCredentialDefResult> IssuerCreateAndStoreCredentialDefAsync(Wallet wallet, string issuerDid, string schemaJson, string tag, string type, string configJson) Parameters Type Name Description Wallet wallet System.String issuerDid System.String schemaJson System.String tag System.String type System.String configJson Returns Type Description System.Threading.Tasks.Task < IssuerCreateAndStoreCredentialDefResult > IssuerCreateAndStoreRevocRegAsync(Wallet, String, String, String, String, String, BlobStorageWriter) Declaration public static Task<IssuerCreateAndStoreRevocRegResult> IssuerCreateAndStoreRevocRegAsync(Wallet wallet, string issuerDid, string type, string tag, string credDefId, string configJson, BlobStorageWriter tailsWriter) Parameters Type Name Description Wallet wallet System.String issuerDid System.String type System.String tag System.String credDefId System.String configJson BlobStorageWriter tailsWriter Returns Type Description System.Threading.Tasks.Task < IssuerCreateAndStoreRevocRegResult > IssuerCreateCredentialAsync(Wallet, String, String, String, String, BlobStorageReader) Declaration public static Task<IssuerCreateCredentialResult> IssuerCreateCredentialAsync(Wallet wallet, string credOfferJson, string credReqJson, string credValuesJson, string revRegId, BlobStorageReader blobStorageReader) Parameters Type Name Description Wallet wallet System.String credOfferJson System.String credReqJson System.String credValuesJson System.String revRegId BlobStorageReader blobStorageReader Returns Type Description System.Threading.Tasks.Task < IssuerCreateCredentialResult > IssuerCreateCredentialOfferAsync(Wallet, String) Declaration public static Task<string> IssuerCreateCredentialOfferAsync(Wallet wallet, string credDefId) Parameters Type Name Description Wallet wallet System.String credDefId Returns Type Description System.Threading.Tasks.Task < System.String > IssuerCreateSchemaAsync(String, String, String, String) Declaration public static Task<IssuerCreateSchemaResult> IssuerCreateSchemaAsync(string issuerDid, string name, string version, string attrs) Parameters Type Name Description System.String issuerDid System.String name System.String version System.String attrs Returns Type Description System.Threading.Tasks.Task < IssuerCreateSchemaResult > IssuerMergeRevocationRegistryDeltasAsync(String, String) Declaration public static Task<string> IssuerMergeRevocationRegistryDeltasAsync(string revRegDelta, string otherRevRegDelta) Parameters Type Name Description System.String revRegDelta System.String otherRevRegDelta Returns Type Description System.Threading.Tasks.Task < System.String > IssuerRevokeCredentialAsync(Wallet, BlobStorageReader, String, String) Declaration public static Task<string> IssuerRevokeCredentialAsync(Wallet wallet, BlobStorageReader blobStorageReader, string revRegId, string credRevocId) Parameters Type Name Description Wallet wallet BlobStorageReader blobStorageReader System.String revRegId System.String credRevocId Returns Type Description System.Threading.Tasks.Task < System.String > ProverCreateCredentialReqAsync(Wallet, String, String, String, String) Declaration public static Task<ProverCreateCredentialRequestResult> ProverCreateCredentialReqAsync(Wallet wallet, string proverDid, string credOfferJson, string credDefJson, string masterSecretId) Parameters Type Name Description Wallet wallet System.String proverDid System.String credOfferJson System.String credDefJson System.String masterSecretId Returns Type Description System.Threading.Tasks.Task < ProverCreateCredentialRequestResult > ProverCreateMasterSecretAsync(Wallet, String) Creates a master secret with the specified name and stores it in the provided wallet. Declaration public static Task<string> ProverCreateMasterSecretAsync(Wallet wallet, string masterSecretId) Parameters Type Name Description Wallet wallet The target wallet. System.String masterSecretId Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task that completes when the operation has completed. Remarks The name of the master secret must be unique within the wallet. ProverCreateProofAsync(Wallet, String, String, String, String, String, String) Creates a proof for the provided proof request. Declaration public static Task<string> ProverCreateProofAsync(Wallet wallet, string proofRequest, string requestedCredentials, string masterSecret, string schemas, string credentialDefs, string revStates) Parameters Type Name Description Wallet wallet The target wallet. System.String proofRequest System.String requestedCredentials System.String masterSecret System.String schemas System.String credentialDefs System.String revStates Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that, when the operation completes, resolves to a JSON string containing the proof. Remarks Either a corresponding claim with optionally revealed attributes or self-attested attribute must be provided for each requested attribute - see the Hyperledger.Indy.AnonCredsApi.AnonCreds.ProverGetClaimsForProofReqAsync(Hyperledger.Indy.WalletApi.Wallet,System.String) method. A proof request may request multiple claims from different schema and different issuers. All required schema, public keys and revocation registries must be provided. The proof request also contains a nonce. The proof contains either proof or self-attested attribute value for each requested attribute. The proofReqJson parameter expects a JSON string containing a proof request from the party that will verify the proof. E.g.: { \"nonce\": string, \"requested_attr1_referent\": <attr_info>, \"requested_attr2_referent\": <attr_info>, \"requested_attr3_referent\": <attr_info>, \"requested_predicate_1_referent\": <predicate_info>, \"requested_predicate_2_referent\": <predicate_info>, } The requestedClaimsJson parameter should contain either a claim or a self-attested attribute for each attribute requested in the proof request. E.g.: { \"requested_attr1_referent\": [claim1_referent_in_wallet, true <reveal_attr>], \"requested_attr2_referent\": [self_attested_attribute], \"requested_attr3_referent\": [claim2_seq_no_in_wallet, false] \"requested_attr4_referent\": [claim2_seq_no_in_wallet, true] \"requested_predicate_1_referent\": [claim2_seq_no_in_wallet], \"requested_predicate_2_referent\": [claim3_seq_no_in_wallet], } The schemasJson parameter expects the JSON for each schema that participates in the proof request. E.g.: { \"claim1_referent_in_wallet\": <schema1>, \"claim2_referent_in_wallet\": <schema2>, \"claim3_referent_in_wallet\": <schema3>, } The masterSecretName specifies the name of the master secret stored in the wallet. The claimDefsJson parameter expects the JSON for each claim definition participating in the proof request. E.g.: { \"claim1_referent_in_wallet\": <claim_def1>, \"claim2_referent_in_wallet\": <claim_def2>, \"claim3_referent_in_wallet\": <claim_def3>, } The revocRegsJson parameter expects the JSON for each revocation registry participating in the proof request. E.g.: { \"claim1_referent_in_wallet\": <revoc_reg1>, \"claim2_referent_in_wallet\": <revoc_reg2>, \"claim3_referent_in_wallet\": <revoc_reg3>, } Upon successful completion the operation will return a JSON string. For each requested attribute either a proof (with optionally revealed attribute value) or self-attested attribute value is provided. Each proof is associated with a claim and corresponding schema_seq_no, issuer_did and revoc_reg_seq_no. There is also aggregated proof part common for all claim proofs. { \"requested\": { \"requested_attr1_id\": [claim_proof1_referent, revealed_attr1, revealed_attr1_as_int], \"requested_attr2_id\": [self_attested_attribute], \"requested_attr3_id\": [claim_proof2_referent] \"requested_attr4_id\": [claim_proof2_referent, revealed_attr4, revealed_attr4_as_int], \"requested_predicate_1_referent\": [claim_proof2_referent], \"requested_predicate_2_referent\": [claim_proof3_referent], } \"claim_proofs\": { \"claim_proof1_referent\": [<claim_proof>, issuer_did, schema_seq_no, revoc_reg_seq_no], \"claim_proof2_referent\": [<claim_proof>, issuer_did, schema_seq_no, revoc_reg_seq_no], \"claim_proof3_referent\": [<claim_proof>, issuer_did, schema_seq_no, revoc_reg_seq_no] }, \"aggregated_proof\": <aggregated_proof> } ProverGetCredentialsAsync(Wallet, String) Declaration public static Task<string> ProverGetCredentialsAsync(Wallet wallet, string filterJson) Parameters Type Name Description Wallet wallet System.String filterJson Returns Type Description System.Threading.Tasks.Task < System.String > ProverGetCredentialsForProofReqAsync(Wallet, String) Declaration public static Task<string> ProverGetCredentialsForProofReqAsync(Wallet wallet, string proofRequestJson) Parameters Type Name Description Wallet wallet System.String proofRequestJson Returns Type Description System.Threading.Tasks.Task < System.String > ProverStoreCredentialAsync(Wallet, String, String, String, String, String) Declaration public static Task<string> ProverStoreCredentialAsync(Wallet wallet, string credId, string credReqMetadataJson, string credJson, string credDefJson, string revRegDefJson) Parameters Type Name Description Wallet wallet System.String credId System.String credReqMetadataJson System.String credJson System.String credDefJson System.String revRegDefJson Returns Type Description System.Threading.Tasks.Task < System.String > UpdateRevocationStateAsync(BlobStorageReader, String, String, String, Int64, String) Declaration public static Task<string> UpdateRevocationStateAsync(BlobStorageReader blobStorageReader, string revState, string revRegDef, string revRegDelta, long timestamp, string credRevId) Parameters Type Name Description BlobStorageReader blobStorageReader System.String revState System.String revRegDef System.String revRegDelta System.Int64 timestamp System.String credRevId Returns Type Description System.Threading.Tasks.Task < System.String > VerifierVerifyProofAsync(String, String, String, String, String, String) Declaration public static Task<bool> VerifierVerifyProofAsync(string proofRequest, string proof, string schemas, string credentialDefs, string revocRegDefs, string revocRegs) Parameters Type Name Description System.String proofRequest System.String proof System.String schemas System.String credentialDefs System.String revocRegDefs System.String revocRegs Returns Type Description System.Threading.Tasks.Task < System.Boolean >"
  },
  "api/Hyperledger.Indy.InvalidParameterException.html": {
    "href": "api/Hyperledger.Indy.InvalidParameterException.html",
    "title": "Class InvalidParameterException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class InvalidParameterException Exception indicating that one of the parameters provided to an SDK call contained a valid that was considered invalid. Inheritance System.Exception IndyException InvalidParameterException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy Assembly : Hyperledger.Indy.Sdk.dll Syntax public class InvalidParameterException : IndyException Properties ParameterIndex Gets the index of the parameter that contained the invalid value. Declaration public int ParameterIndex { get; } Property Value Type Description System.Int32"
  },
  "api/Hyperledger.Indy.WalletApi.DuplicateWalletTypeException.html": {
    "href": "api/Hyperledger.Indy.WalletApi.DuplicateWalletTypeException.html",
    "title": "Class DuplicateWalletTypeException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class DuplicateWalletTypeException Exception thrown when registering a wallet type that has already been registered. Inheritance System.Exception IndyException DuplicateWalletTypeException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class DuplicateWalletTypeException : IndyException"
  },
  "api/Hyperledger.Indy.WalletApi.ICustomWallet.html": {
    "href": "api/Hyperledger.Indy.WalletApi.ICustomWallet.html",
    "title": "Interface ICustomWallet | Hyperledger Indy .NET Wrapper",
    "keywords": "Interface ICustomWallet Features all custom wallets must implement. Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public interface ICustomWallet Methods Get(String, out String) Allows an implementer to get a value from the wallet. Declaration ErrorCode Get(string key, out string value) Parameters Type Name Description System.String key The key of the value to get. System.String value The value obtained from the wallet. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation. Remarks If the key does not exist the method should return WalletNotFoundError . GetNotExpired(String, out String) Allows an implementer to get a value from the wallet if it has not expired. Declaration ErrorCode GetNotExpired(string key, out string value) Parameters Type Name Description System.String key The key of the value to get. System.String value The value obtained from the wallet. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation. Remarks If the key does not exist or the record associated with the key has expired then the method should return WalletNotFoundError . List(String, out String) Allows an implementer to get a list of values from the wallet that match a key prefix. Declaration ErrorCode List(string keyPrefix, out string valuesJson) Parameters Type Name Description System.String keyPrefix The key prefix for the values requested. System.String valuesJson The JSON string containing the values associated with the key prefix. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation. Remarks The method should return a JSON string that conforms to the following format: { \"values\":[ {\"key\":\"key_1\", \"value\":\"value_1\"}, ... ] } If no values matching the keyPrefix parameter are found the values array in the JSON should be empty. Set(String, String) Allows an implementer to set a value in the wallet. Declaration ErrorCode Set(string key, string value) Parameters Type Name Description System.String key The key of the value to set. System.String value The value to set. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation."
  },
  "api/Hyperledger.Indy.InvalidStructureException.html": {
    "href": "api/Hyperledger.Indy.InvalidStructureException.html",
    "title": "Class InvalidStructureException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class InvalidStructureException Exception indicating that a value being processed was not considered a valid value. Inheritance System.Exception IndyException InvalidStructureException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy Assembly : Hyperledger.Indy.Sdk.dll Syntax public class InvalidStructureException : IndyException"
  },
  "api/Hyperledger.Indy.WalletApi.InvalidWalletException.html": {
    "href": "api/Hyperledger.Indy.WalletApi.InvalidWalletException.html",
    "title": "Class InvalidWalletException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class InvalidWalletException Exception thrown when an attempt is made to use a closed or invalid wallet. Inheritance System.Exception IndyException InvalidWalletException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class InvalidWalletException : IndyException"
  },
  "api/Hyperledger.Indy.WalletApi.UnknownWalletTypeException.html": {
    "href": "api/Hyperledger.Indy.WalletApi.UnknownWalletTypeException.html",
    "title": "Class UnknownWalletTypeException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class UnknownWalletTypeException Exception thrown when attempting to open a wallet with a type that has not been registered. Inheritance System.Exception IndyException UnknownWalletTypeException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class UnknownWalletTypeException : IndyException"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Namespaces | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespaces The Indy SDK wrapper for .NET is separated into a series of namespaces that contain types for performing specific types of interactions. The list of these namespaces and their function can be found below and the you can access the types can be accessed by selecting the namespace from the sidebar. Hyperledger.Indy General types that relate to the .NET wrapper as a whole. This includes exception types that are common to all interactions. See the Hyperledger.Indy Namespace topic for details. Hyperledger.Indy.AnonCredsApi Types for generating and managing anonymous credentials including claims, claim schema, proofs, etc. See the Hyperledger.Indy.AnonCredsApi Namespace topic for details. Hyperledger.Indy.BlobStorageApi Types for reading and writing Binary Large OBjects to and from storage. See the Hyperledger.Indy.BlobStorageApi Namespace topic for details. Hyperledger.Indy.CryptoApi Types for performing common pure cryptographic functions that are not specific to the Did functionality such as generating key-pairs, signing, verifying and anonymous encryption. See the Hyperledger.Indy.CryptoApi Namespace topic for details. Hyperledger.Indy.DidApi Types for creating and managing DIDs, key management, encryption, decryption, digital signatures, etc. See the Hyperledger.Indy.DidApi Namespace topic for details. Hyperledger.Indy.LedgerApi Types for generating transaction messages as well as signing and sending them to a ledger pool. See the Hyperledger.Indy.LedgerApi Namespace topic for details. Hyperledger.Indy.PairwiseApi Types for managing pairwise relationships between DIDs. See the Hyperledger.Indy.PairwiseApi Namespace topic for details. Hyperledger.Indy.PoolApi Types for managing connections to node pools that host ledgers. See the Hyperledger.Indy.PoolApi Namespace topic for details. Hyperledger.Indy.WalletApi Types for managing wallets which can contain DIDs, their associated keys and other key/value data. See the Hyperledger.Indy.WalletApi Namespace topic for details."
  },
  "index.html": {
    "href": "index.html",
    "title": ".NET API for the Hyperledger Indy SDK | Hyperledger Indy .NET Wrapper",
    "keywords": ".NET API for the Hyperledger Indy SDK The .NET API for the Hyperledger Indy SDK can be used with any flavor of .NET that conforms to the .NET Standard 1.0 and above including but not limited to the .NET Framework v4.5 and .NET Core 1.0 and can be used on any platform with .NET support. The .NET assembly is a wrapper for the C-callable Indy SDK which must be installed separately in an appropriate location (e.g. the DLL search path in Windows). The SDK provides features for managing a self sovereign identity including communication between agents, storing and managing keys and data, generation of claims, claim requests, proofs and other anonymous credentials, cryptographic functionality and generation of messages for interacting with an Indy node pool such as the one hosting the Sovrin ledger. For more information on Hyperledger Indy see the Hyperledger website The source code for the Hyperledger Indy SDK, including this .NET wrapper can be found here For more information on Sovrin see the Sovrin website To dive in and start coding please proceed to the API Documentation ."
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParsePaymentResponseDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParsePaymentResponseDelegate.html",
    "title": "Class NativeMethods.ParsePaymentResponseDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.ParsePaymentResponseDelegate Inheritance System.MulticastDelegate NativeMethods.ParsePaymentResponseDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class ParsePaymentResponseDelegate : MulticastDelegate Constructors ParsePaymentResponseDelegate(Object, IntPtr) Declaration public ParsePaymentResponseDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string utxo_json, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String utxo_json System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String) Declaration public virtual void Invoke(int command_handle, int err, string utxo_json) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String utxo_json"
  },
  "api/Hyperledger.Indy.PoolApi.Pool.html": {
    "href": "api/Hyperledger.Indy.PoolApi.Pool.html",
    "title": "Class Pool | Hyperledger Indy .NET Wrapper",
    "keywords": "Class Pool Represents a connection to a pool of ledger nodes and provides static methods for managing connections to pools. Inheritance System.Object Pool Implements System.IDisposable Namespace : Hyperledger.Indy.PoolApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class Pool : Object, IDisposable Methods CloseAsync() Closes the pool. Declaration public Task CloseAsync() Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task that completes when the operation completes. Remarks note Once a Pool instance is closed it cannot be opened again. Instead call the OpenPoolLedgerAsync(String, String) method to open a new Pool instance. CreatePoolLedgerConfigAsync(String, String) Creates a new local pool configuration with the specified name that can be used later to open a connection to pool nodes. Declaration public static Task CreatePoolLedgerConfigAsync(string configName, string config) Parameters Type Name Description System.String configName The name for the configuration. System.String config The configuration JSON. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task<> with no return value that completes when the configuration is created. Remarks If the configuration specified in the config parameter is null then the default configuration will be used, however if specified the value should adhere to the following JSON format: { \"genesis_txn\": \"path/to/genesis/transaction/file\" } If the value of the genesis_txn key in the JSON is null then a default file will be used. If the file specified does not exist it will be created. See Also OpenPoolLedgerAsync(String, String) DeletePoolLedgerConfigAsync(String) DeletePoolLedgerConfigAsync(String) Deletes an existing pool configuration. Declaration public static Task DeletePoolLedgerConfigAsync(string configName) Parameters Type Name Description System.String configName The name of the configuration to delete. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task<> with no return value that completes when the configuration is deleted. See Also CreatePoolLedgerConfigAsync(String, String) Dispose() Disposes of resources. Declaration public void Dispose() Finalize() Finalizes the resource during GC if it hasn't been already. Declaration protected override void Finalize() ListPoolsAsync() Declaration public static Task<string> ListPoolsAsync() Returns Type Description System.Threading.Tasks.Task < System.String > OpenPoolLedgerAsync(String, String) Opens a pool and connects to the ledger nodes. Declaration public static Task<Pool> OpenPoolLedgerAsync(string configName, string config) Parameters Type Name Description System.String configName The name of the pool configuration to use. System.String config The runtime configuration to use. Returns Type Description System.Threading.Tasks.Task < Pool > An asynchronous System.Threading.Tasks.Task<> that resolves to a Pool instance once the pool is opened. Remarks A Pool cannot be opened unless the a pool configuration with the specified name was previously configured using the CreatePoolLedgerConfigAsync(String, String) method. When opening a pool the runtime configuration can be specified using the config parameter, which expects a JSON string with the following format: { \"refresh_on_open\": bool (optional), Forces pool ledger to be refreshed immediately after opening. Defaults to true. \"auto_refresh_time\": int (optional), After this time in minutes pool ledger will be automatically refreshed. Use 0 to disable automatic refresh. Defaults to 24*60. \"network_timeout\": int (optional), Network timeout for communication with nodes in milliseconds. Defaults to 20000. } If the config parameter is null then the default configuration will be used. note Attempting to open a pool with the same name more than once will result in an error. RefreshAsync() Refreshes a local copy of the pool and updates the pool's node connections. Declaration public Task RefreshAsync() Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task that completes when the operation completes. SetProtocolVersionAsync(Int32) Declaration public static Task SetProtocolVersionAsync(int protocolVersion) Parameters Type Name Description System.Int32 protocolVersion Returns Type Description System.Threading.Tasks.Task Implements System.IDisposable"
  },
  "api/Hyperledger.Indy.WalletApi.WalletType.html": {
    "href": "api/Hyperledger.Indy.WalletApi.WalletType.html",
    "title": "Class WalletType | Hyperledger Indy .NET Wrapper",
    "keywords": "Class WalletType Base type for implementing custom wallet types. Inheritance System.Object WalletType Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public abstract class WalletType : Object Constructors WalletType() Initializes a new WalletType. Declaration protected WalletType() Methods Close(Int32) Allows an implementer to close a wallet. Declaration public abstract ErrorCode Close(int walletHandle) Parameters Type Name Description System.Int32 walletHandle The handle of the wallet to close. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation. Remarks When implementing a custom wallet this method is responsible for closing the wallet with the handle allocated earlier in the Open(String, String, String, String, out Int32) method. Create(String, String, String) Allows an implementer to create a new wallet. Declaration public abstract ErrorCode Create(string name, string config, string credentials) Parameters Type Name Description System.String name The name of the wallet to create. System.String config The configuration for the wallet. System.String credentials The credentials for the wallet. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation. Remarks When implementing a custom wallet this method is responsible for creating the new wallet and storing its configuration and credentials. Delete(String, String, String) Allows an implementer to delete a wallet. Declaration public abstract ErrorCode Delete(string name, string config, string credentials) Parameters Type Name Description System.String name The name of the wallet being deleted System.String config The configuration of the wallet. System.String credentials The credentials of the wallet. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation. Remarks When implementing a custom wallet this method is responsible for deleting a wallet created earlier via the Create(String, String, String) method. The value of the credentials parameter should be used to control access whether or not the wallet can be deleted. GetWalletByHandle(Int32) Gets a wallet by its handle. Declaration protected abstract ICustomWallet GetWalletByHandle(int walletHandle) Parameters Type Name Description System.Int32 walletHandle The handle of the wallet. Returns Type Description ICustomWallet The wallet instance associated with the handle. Open(String, String, String, String, out Int32) Allows an implementer to open a wallet. Declaration public abstract ErrorCode Open(string name, string config, string runtimeConfig, string credentials, out int walletHandle) Parameters Type Name Description System.String name The name of the wallet to open. System.String config The configuration for the wallet. System.String runtimeConfig The runtime configuration for the wallet. System.String credentials The credentials of the wallet. System.Int32 walletHandle The handle assigned to the wallet. Returns Type Description ErrorCode An ErrorCode value indicating the outcome of the operation. Remarks When implementing a custom wallet this method is responsible for opening the wallet and returning a handle for the opened wallet. The value of the runtimeConfig parameter should override any corresponding values provided in the config parameter and value of the credentials parameter should be used to control access to the wallet."
  },
  "api/Hyperledger.Indy.BlobStorageApi.html": {
    "href": "api/Hyperledger.Indy.BlobStorageApi.html",
    "title": "Namespace Hyperledger.Indy.BlobStorageApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.BlobStorageApi Classes BlobStorage BlobStorageReader BlobStorageWriter"
  },
  "api/Hyperledger.Indy.DidApi.UnknownCryptoException.html": {
    "href": "api/Hyperledger.Indy.DidApi.UnknownCryptoException.html",
    "title": "Class UnknownCryptoException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class UnknownCryptoException Inheritance System.Exception IndyException UnknownCryptoException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.DidApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class UnknownCryptoException : IndyException"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParseGetTxnFeesResponseDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParseGetTxnFeesResponseDelegate.html",
    "title": "Class NativeMethods.ParseGetTxnFeesResponseDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.ParseGetTxnFeesResponseDelegate Inheritance System.MulticastDelegate NativeMethods.ParseGetTxnFeesResponseDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class ParseGetTxnFeesResponseDelegate : MulticastDelegate Constructors ParseGetTxnFeesResponseDelegate(Object, IntPtr) Declaration public ParseGetTxnFeesResponseDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string fees_json, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String fees_json System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String) Declaration public virtual void Invoke(int command_handle, int err, string fees_json) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String fees_json"
  },
  "api/Hyperledger.Indy.PaymentsApi.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.html",
    "title": "Namespace Hyperledger.Indy.PaymentsApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.PaymentsApi Classes NativeMethods NativeMethods.AddRequestFeesDelegate NativeMethods.BuildGetTxnFeesReqDelegate NativeMethods.BuildGetUtxoRequstDelegate NativeMethods.BuildMintReqDelegate NativeMethods.BuildPaymentRequestDelegate NativeMethods.BuildSetTxnFeesReqDelegate NativeMethods.CreatePaymentAddressDelegate NativeMethods.ParseGetTxnFeesResponseDelegate NativeMethods.ParseGetUtxoResponseDelegate NativeMethods.ParsePaymentResponseDelegate NativeMethods.ParseResponseWithFeesDelegate PaymentMethod PaymentResult Payments"
  },
  "api/Hyperledger.Indy.LedgerApi.ParseRegistryResponseResult.html": {
    "href": "api/Hyperledger.Indy.LedgerApi.ParseRegistryResponseResult.html",
    "title": "Class ParseRegistryResponseResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class ParseRegistryResponseResult Inheritance System.Object ParseRegistryResponseResult Namespace : Hyperledger.Indy.LedgerApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class ParseRegistryResponseResult : Object Properties Id Declaration public string Id { get; } Property Value Type Description System.String ObjectJson Declaration public string ObjectJson { get; } Property Value Type Description System.String Timestamp Declaration public long Timestamp { get; } Property Value Type Description System.Int64"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildMintReqDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildMintReqDelegate.html",
    "title": "Class NativeMethods.BuildMintReqDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.BuildMintReqDelegate Inheritance System.MulticastDelegate NativeMethods.BuildMintReqDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class BuildMintReqDelegate : MulticastDelegate Constructors BuildMintReqDelegate(Object, IntPtr) Declaration public BuildMintReqDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string mint_req_json, string payment_method, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String mint_req_json System.String payment_method System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String, String) Declaration public virtual void Invoke(int command_handle, int err, string mint_req_json, string payment_method) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String mint_req_json System.String payment_method"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.html",
    "title": "Class NativeMethods | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods Inheritance System.Object NativeMethods Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class NativeMethods : Object Constructors NativeMethods() Declaration public NativeMethods()"
  },
  "api/Hyperledger.Indy.BlobStorageApi.BlobStorageReader.html": {
    "href": "api/Hyperledger.Indy.BlobStorageApi.BlobStorageReader.html",
    "title": "Class BlobStorageReader | Hyperledger Indy .NET Wrapper",
    "keywords": "Class BlobStorageReader Inheritance System.Object BlobStorageReader Namespace : Hyperledger.Indy.BlobStorageApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class BlobStorageReader : Object"
  },
  "api/Hyperledger.Indy.DidApi.EncryptResult.html": {
    "href": "api/Hyperledger.Indy.DidApi.EncryptResult.html",
    "title": "Class EncryptResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class EncryptResult Inheritance System.Object EncryptResult Namespace : Hyperledger.Indy.DidApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class EncryptResult : Object Properties EncryptedMsg Declaration public byte[] EncryptedMsg { get; } Property Value Type Description System.Byte [] Nonce Declaration public byte[] Nonce { get; } Property Value Type Description System.Byte []"
  },
  "api/Hyperledger.Indy.LedgerApi.ParseResponseResult.html": {
    "href": "api/Hyperledger.Indy.LedgerApi.ParseResponseResult.html",
    "title": "Class ParseResponseResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class ParseResponseResult Inheritance System.Object ParseResponseResult Namespace : Hyperledger.Indy.LedgerApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class ParseResponseResult : Object Properties Id Declaration public string Id { get; } Property Value Type Description System.String ObjectJson Declaration public string ObjectJson { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.AnonCredsApi.RevocationRegistryFullException.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.RevocationRegistryFullException.html",
    "title": "Class RevocationRegistryFullException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class RevocationRegistryFullException Exception thrown when attempting to use a full revocation registry. Inheritance System.Exception IndyException RevocationRegistryFullException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class RevocationRegistryFullException : IndyException"
  },
  "api/Hyperledger.Indy.LedgerApi.LedgerConsensusException.html": {
    "href": "api/Hyperledger.Indy.LedgerApi.LedgerConsensusException.html",
    "title": "Class LedgerConsensusException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class LedgerConsensusException Exception thrown when the no consensus was reached during a ledger operation. Inheritance System.Exception IndyException LedgerConsensusException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.LedgerApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class LedgerConsensusException : IndyException"
  },
  "api/Hyperledger.Indy.WalletApi.WalletValueNotFoundException.html": {
    "href": "api/Hyperledger.Indy.WalletApi.WalletValueNotFoundException.html",
    "title": "Class WalletValueNotFoundException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class WalletValueNotFoundException Exception thrown when requesting a value from a wallet and the specified key does not exist. Inheritance System.Exception IndyException WalletValueNotFoundException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class WalletValueNotFoundException : IndyException"
  },
  "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateCredentialResult.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateCredentialResult.html",
    "title": "Class IssuerCreateCredentialResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class IssuerCreateCredentialResult Inheritance System.Object IssuerCreateCredentialResult Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class IssuerCreateCredentialResult : Object Constructors IssuerCreateCredentialResult(String, String, String) Declaration public IssuerCreateCredentialResult(string credentialJson, string revocId, string revocRegDeltaJson) Parameters Type Name Description System.String credentialJson System.String revocId System.String revocRegDeltaJson Properties CredentialJson Declaration public string CredentialJson { get; } Property Value Type Description System.String RevocId Declaration public string RevocId { get; } Property Value Type Description System.String RevocRegDeltaJson Declaration public string RevocRegDeltaJson { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.BlobStorageApi.BlobStorageWriter.html": {
    "href": "api/Hyperledger.Indy.BlobStorageApi.BlobStorageWriter.html",
    "title": "Class BlobStorageWriter | Hyperledger Indy .NET Wrapper",
    "keywords": "Class BlobStorageWriter Inheritance System.Object BlobStorageWriter Namespace : Hyperledger.Indy.BlobStorageApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class BlobStorageWriter : Object"
  },
  "api/Hyperledger.Indy.DidApi.EndpointForDidResult.html": {
    "href": "api/Hyperledger.Indy.DidApi.EndpointForDidResult.html",
    "title": "Class EndpointForDidResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class EndpointForDidResult Inheritance System.Object EndpointForDidResult Namespace : Hyperledger.Indy.DidApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class EndpointForDidResult : Object Properties Address Declaration public string Address { get; } Property Value Type Description System.String TransportKey Declaration public string TransportKey { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.LedgerApi.html": {
    "href": "api/Hyperledger.Indy.LedgerApi.html",
    "title": "Namespace Hyperledger.Indy.LedgerApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.LedgerApi Classes InvalidLedgerTransactionException Exception thrown when attempting to send an unknown or incomplete ledger message. Ledger Provides methods for building messages suitable for submission to the ledger and methods for signing and submitting messages to the ledger. LedgerConsensusException Exception thrown when the no consensus was reached during a ledger operation. LedgerSecurityException Exception thrown when attempting to send a transaction without the necessary privileges. ParseRegistryResponseResult ParseResponseResult"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.CreatePaymentAddressDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.CreatePaymentAddressDelegate.html",
    "title": "Class NativeMethods.CreatePaymentAddressDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.CreatePaymentAddressDelegate Inheritance System.MulticastDelegate NativeMethods.CreatePaymentAddressDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class CreatePaymentAddressDelegate : MulticastDelegate Constructors CreatePaymentAddressDelegate(Object, IntPtr) Declaration public CreatePaymentAddressDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string payment_address, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String payment_address System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String) Declaration public virtual void Invoke(int command_handle, int err, string payment_address) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String payment_address"
  },
  "api/Hyperledger.Indy.PaymentsApi.Payments.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.Payments.html",
    "title": "Class Payments | Hyperledger Indy .NET Wrapper",
    "keywords": "Class Payments Inheritance System.Object Payments Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class Payments : Object Constructors Payments() Declaration public Payments() Methods AddRequestFeesAsync(Wallet, String, String, String, String) Declaration public static Task<PaymentResult> AddRequestFeesAsync(Wallet wallet, string submitterDid, string reqJson, string inputsJson, string outputsJson) Parameters Type Name Description Wallet wallet System.String submitterDid System.String reqJson System.String inputsJson System.String outputsJson Returns Type Description System.Threading.Tasks.Task < PaymentResult > BuildGetTxnFeesRequestAsync(Wallet, String, String) Declaration public static Task<string> BuildGetTxnFeesRequestAsync(Wallet wallet, string submitterDid, string paymentMethod) Parameters Type Name Description Wallet wallet System.String submitterDid System.String paymentMethod Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetUtxoRequestAsync(Wallet, String, String) Declaration public static Task<PaymentResult> BuildGetUtxoRequestAsync(Wallet wallet, string submittedDid, string paymentAddress) Parameters Type Name Description Wallet wallet System.String submittedDid System.String paymentAddress Returns Type Description System.Threading.Tasks.Task < PaymentResult > BuildMintRequestAsync(Wallet, String, String) Declaration public static Task<PaymentResult> BuildMintRequestAsync(Wallet wallet, string submitterDid, string outputsJson) Parameters Type Name Description Wallet wallet System.String submitterDid System.String outputsJson Returns Type Description System.Threading.Tasks.Task < PaymentResult > BuildPaymentRequestAsync(Wallet, String, String, String) Declaration public static Task<PaymentResult> BuildPaymentRequestAsync(Wallet wallet, string submitterDid, string inputsJson, string outputsJson) Parameters Type Name Description Wallet wallet System.String submitterDid System.String inputsJson System.String outputsJson Returns Type Description System.Threading.Tasks.Task < PaymentResult > BuildSetTxnFeesRequestAsync(Wallet, String, String, String) Declaration public static Task<string> BuildSetTxnFeesRequestAsync(Wallet wallet, string submitterDid, string paymentMethod, string feesJson) Parameters Type Name Description Wallet wallet System.String submitterDid System.String paymentMethod System.String feesJson Returns Type Description System.Threading.Tasks.Task < System.String > CreatePaymentAddressAsync(Wallet, String, String) Declaration public static Task<string> CreatePaymentAddressAsync(Wallet wallet, string paymentMethod, string config) Parameters Type Name Description Wallet wallet System.String paymentMethod System.String config Returns Type Description System.Threading.Tasks.Task < System.String > ListPaymentAddressesAsync(Wallet) Declaration public static Task<string> ListPaymentAddressesAsync(Wallet wallet) Parameters Type Name Description Wallet wallet Returns Type Description System.Threading.Tasks.Task < System.String > ParseGetTxnFeesResponseAsync(String, String) Declaration public static Task<string> ParseGetTxnFeesResponseAsync(string paymentMethod, string responseJson) Parameters Type Name Description System.String paymentMethod System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String > ParseGetUtxoResponseAsync(String, String) Declaration public static Task<string> ParseGetUtxoResponseAsync(string paymentMethod, string responseJson) Parameters Type Name Description System.String paymentMethod System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String > ParsePaymentResponseAsync(String, String) Declaration public static Task<string> ParsePaymentResponseAsync(string paymentMethod, string responseJson) Parameters Type Name Description System.String paymentMethod System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String > ParseResponseWithFeesAsync(String, String) Declaration public static Task<string> ParseResponseWithFeesAsync(string paymentMethod, string responseJson) Parameters Type Name Description System.String paymentMethod System.String responseJson Returns Type Description System.Threading.Tasks.Task < System.String > RegisterPaymentMethodAsync(String, PaymentMethod) Declaration public static Task RegisterPaymentMethodAsync(string paymentMethod, PaymentMethod implementation) Parameters Type Name Description System.String paymentMethod PaymentMethod implementation Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Hyperledger.Indy.AnonCredsApi.AnoncredsAccumulatorFullException.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.AnoncredsAccumulatorFullException.html",
    "title": "Class AnoncredsAccumulatorFullException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class AnoncredsAccumulatorFullException Exception thrown when an anoncreds accumulator is full. Inheritance System.Exception IndyException AnoncredsAccumulatorFullException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class AnoncredsAccumulatorFullException : IndyException"
  },
  "api/Hyperledger.Indy.AnonCredsApi.AnoncredsNotIssuedException.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.AnoncredsNotIssuedException.html",
    "title": "Class AnoncredsNotIssuedException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class AnoncredsNotIssuedException Exception thrown when an anoncreds is not issued. Inheritance System.Exception IndyException AnoncredsNotIssuedException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class AnoncredsNotIssuedException : IndyException"
  },
  "api/Hyperledger.Indy.PoolApi.InvalidPoolException.html": {
    "href": "api/Hyperledger.Indy.PoolApi.InvalidPoolException.html",
    "title": "Class InvalidPoolException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class InvalidPoolException Exception thrown when attempting to use a pool that has been closed or is invalid. Inheritance System.Exception IndyException InvalidPoolException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.PoolApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class InvalidPoolException : IndyException"
  },
  "api/Hyperledger.Indy.WalletApi.WalletAlreadyOpenedException.html": {
    "href": "api/Hyperledger.Indy.WalletApi.WalletAlreadyOpenedException.html",
    "title": "Class WalletAlreadyOpenedException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class WalletAlreadyOpenedException Exception thrown when attempting to open a wallet that was already opened. Inheritance System.Exception IndyException WalletAlreadyOpenedException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class WalletAlreadyOpenedException : IndyException"
  },
  "api/Hyperledger.Indy.WalletApi.WalletExistsException.html": {
    "href": "api/Hyperledger.Indy.WalletApi.WalletExistsException.html",
    "title": "Class WalletExistsException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class WalletExistsException Exception thrown when creating a wallet and a wallet with the same name already exists. Inheritance System.Exception IndyException WalletExistsException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class WalletExistsException : IndyException"
  },
  "api/Hyperledger.Indy.CryptoApi.html": {
    "href": "api/Hyperledger.Indy.CryptoApi.html",
    "title": "Namespace Hyperledger.Indy.CryptoApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.CryptoApi Classes AuthDecryptResult Crypto Provides methods for performing ."
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildGetUtxoRequstDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildGetUtxoRequstDelegate.html",
    "title": "Class NativeMethods.BuildGetUtxoRequstDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.BuildGetUtxoRequstDelegate Inheritance System.MulticastDelegate NativeMethods.BuildGetUtxoRequstDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class BuildGetUtxoRequstDelegate : MulticastDelegate Constructors BuildGetUtxoRequstDelegate(Object, IntPtr) Declaration public BuildGetUtxoRequstDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string get_utxo_txn_json, string payment_method, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String get_utxo_txn_json System.String payment_method System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String, String) Declaration public virtual void Invoke(int command_handle, int err, string get_utxo_txn_json, string payment_method) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String get_utxo_txn_json System.String payment_method"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParseResponseWithFeesDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParseResponseWithFeesDelegate.html",
    "title": "Class NativeMethods.ParseResponseWithFeesDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.ParseResponseWithFeesDelegate Inheritance System.MulticastDelegate NativeMethods.ParseResponseWithFeesDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class ParseResponseWithFeesDelegate : MulticastDelegate Constructors ParseResponseWithFeesDelegate(Object, IntPtr) Declaration public ParseResponseWithFeesDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string utxo_json, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String utxo_json System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String) Declaration public virtual void Invoke(int command_handle, int err, string utxo_json) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String utxo_json"
  },
  "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateAndStoreCredentialDefResult.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateAndStoreCredentialDefResult.html",
    "title": "Class IssuerCreateAndStoreCredentialDefResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class IssuerCreateAndStoreCredentialDefResult Inheritance System.Object IssuerCreateAndStoreCredentialDefResult Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class IssuerCreateAndStoreCredentialDefResult : Object Constructors IssuerCreateAndStoreCredentialDefResult(String, String) Declaration public IssuerCreateAndStoreCredentialDefResult(string credDefId, string credDefJson) Parameters Type Name Description System.String credDefId System.String credDefJson Properties CredDefId Declaration public string CredDefId { get; } Property Value Type Description System.String CredDefJson Declaration public string CredDefJson { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildPaymentRequestDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildPaymentRequestDelegate.html",
    "title": "Class NativeMethods.BuildPaymentRequestDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.BuildPaymentRequestDelegate Inheritance System.MulticastDelegate NativeMethods.BuildPaymentRequestDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class BuildPaymentRequestDelegate : MulticastDelegate Constructors BuildPaymentRequestDelegate(Object, IntPtr) Declaration public BuildPaymentRequestDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string payment_req_json, string payment_method, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String payment_req_json System.String payment_method System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String, String) Declaration public virtual void Invoke(int command_handle, int err, string payment_req_json, string payment_method) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String payment_req_json System.String payment_method"
  },
  "api/Hyperledger.Indy.InvalidStateException.html": {
    "href": "api/Hyperledger.Indy.InvalidStateException.html",
    "title": "Class InvalidStateException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class InvalidStateException Exception indicating that the SDK library experienced an unexpected internal error. Inheritance System.Exception IndyException InvalidStateException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy Assembly : Hyperledger.Indy.Sdk.dll Syntax public class InvalidStateException : IndyException"
  },
  "api/Hyperledger.Indy.PoolApi.PoolLedgerConfigExistsException.html": {
    "href": "api/Hyperledger.Indy.PoolApi.PoolLedgerConfigExistsException.html",
    "title": "Class PoolLedgerConfigExistsException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class PoolLedgerConfigExistsException Exception thrown when attempting to create a pool ledger config with same name as an existing pool ledger config. Inheritance System.Exception IndyException PoolLedgerConfigExistsException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.PoolApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class PoolLedgerConfigExistsException : IndyException"
  },
  "api/Hyperledger.Indy.PoolApi.PoolLedgerTerminatedException.html": {
    "href": "api/Hyperledger.Indy.PoolApi.PoolLedgerTerminatedException.html",
    "title": "Class PoolLedgerTerminatedException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class PoolLedgerTerminatedException Exception thrown when the pool ledger was terminated. Inheritance System.Exception IndyException PoolLedgerTerminatedException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.PoolApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class PoolLedgerTerminatedException : IndyException"
  },
  "api/Hyperledger.Indy.DidApi.html": {
    "href": "api/Hyperledger.Indy.DidApi.html",
    "title": "Namespace Hyperledger.Indy.DidApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.DidApi Classes CreateAndStoreMyDidResult Did EncryptResult EndpointForDidResult UnknownCryptoException"
  },
  "api/Hyperledger.Indy.LedgerApi.Ledger.html": {
    "href": "api/Hyperledger.Indy.LedgerApi.Ledger.html",
    "title": "Class Ledger | Hyperledger Indy .NET Wrapper",
    "keywords": "Class Ledger Provides methods for building messages suitable for submission to the ledger and methods for signing and submitting messages to the ledger. Inheritance System.Object Ledger Namespace : Hyperledger.Indy.LedgerApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public static class Ledger : Object Remarks This class provides methods for generating messages for submission to the ledger; each of these methods is prefixed with the word 'Build' and returns a JSON message which must be signed and submitted to a node pool. These messages can be submitted to the ledger using the SignAndSubmitRequestAsync(Pool, Wallet, String, String) or can be signed first using the SignRequestAsync(Wallet, String, String) method then submitted later using the SubmitRequestAsync(Pool, String) method. Fields NYM_ROLE_STEWARD The 'Steward' NYM role. Declaration public const string NYM_ROLE_STEWARD = \"STEWARD\" Field Value Type Description System.String NYM_ROLE_TRUST_ANCHOR The 'Trust Anchor' NYM role. Declaration public const string NYM_ROLE_TRUST_ANCHOR = \"TRUST_ANCHOR\" Field Value Type Description System.String NYM_ROLE_TRUSTEE The 'Trustee' NYM role. Declaration public const string NYM_ROLE_TRUSTEE = \"TRUSTEE\" Field Value Type Description System.String Methods BuildAttribRequestAsync(String, String, String, String, String) Builds a ledger request for storing an ATTRIB. Declaration public static Task<string> BuildAttribRequestAsync(string submitterDid, string targetDid, string hash, string raw, string enc) Parameters Type Name Description System.String submitterDid The DID of the party that will submit the request to the ledger. System.String targetDid The DID the ATTRIB will belong to. System.String hash The hash of the ATTRIB data. System.String raw The raw JSON attribute data. System.String enc The encrypted attribute data. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a System.String containing the request JSON. Remarks Builds a request message that is suitable for setting an attribute on the ledger. The submitterDid , targetDid are mandatory and any one of the hash , raw or enc parameters must also be provided, depending on what type of data should be stored. BuildCredDefRequestAsync(String, String) Declaration public static Task<string> BuildCredDefRequestAsync(string submitterDid, string data) Parameters Type Name Description System.String submitterDid System.String data Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetAttribRequestAsync(String, String, String, String, String) Declaration public static Task<string> BuildGetAttribRequestAsync(string submitterDid, string targetDid, string raw, string hash, string enc) Parameters Type Name Description System.String submitterDid System.String targetDid System.String raw System.String hash System.String enc Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetCredDefRequestAsync(String, String) Declaration public static Task<string> BuildGetCredDefRequestAsync(string submitterDid, string id) Parameters Type Name Description System.String submitterDid System.String id Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetDdoRequestAsync(String, String) Builds a ledger request to get a DDO. Declaration public static Task<string> BuildGetDdoRequestAsync(string submitterDid, string targetDid) Parameters Type Name Description System.String submitterDid The DID of the party who will submit the request to the ledger. System.String targetDid The DID of the DDO to get from the ledger. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a System.String containing the request JSON. Remarks This message builds a request message that is suitable for requesting a DDO from the ledger. The resulting message can be submitted to the ledger using the SignAndSubmitRequestAsync(Pool, Wallet, String, String) method or can be signed first using the SignRequestAsync(Wallet, String, String) method then submitted later using the SubmitRequestAsync(Pool, String) method. BuildGetNymRequestAsync(String, String) Builds a GET_NYM ledger request. Declaration public static Task<string> BuildGetNymRequestAsync(string submitterDid, string targetDid) Parameters Type Name Description System.String submitterDid The DID of the party submitting the request. System.String targetDid The target DID. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a System.String containing the request JSON. Remarks Builds a request message that is suitable for requesting a NYM from the ledger. BuildGetRevocRegDefRequestAsync(String, String) Declaration public static Task<string> BuildGetRevocRegDefRequestAsync(string submitterDid, string id) Parameters Type Name Description System.String submitterDid System.String id Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetRevocRegDeltaRequestAsync(String, String, Int64, Int64) Declaration public static Task<string> BuildGetRevocRegDeltaRequestAsync(string submitterDid, string revocRegDefId, long from, long to) Parameters Type Name Description System.String submitterDid System.String revocRegDefId System.Int64 from System.Int64 to Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetRevocRegRequestAsync(String, String, Int64) Declaration public static Task<string> BuildGetRevocRegRequestAsync(string submitterDid, string revocRegDefId, long timestamp) Parameters Type Name Description System.String submitterDid System.String revocRegDefId System.Int64 timestamp Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetSchemaRequestAsync(String, String) Declaration public static Task<string> BuildGetSchemaRequestAsync(string submitterDid, string schemaId) Parameters Type Name Description System.String submitterDid System.String schemaId Returns Type Description System.Threading.Tasks.Task < System.String > BuildGetTxnRequestAsync(String, Int32) Builds a GET_TXN request Declaration public static Task<string> BuildGetTxnRequestAsync(string submitterDid, int data) Parameters Type Name Description System.String submitterDid The DID of the submitter. System.Int32 data seq_no of transaction in ledger Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a System.String containing the request JSON. BuildNodeRequestAsync(String, String, String) Builds a NODE ledger request. Declaration public static Task<string> BuildNodeRequestAsync(string submitterDid, string targetDid, string data) Parameters Type Name Description System.String submitterDid The DID of the submitter. System.String targetDid The target DID. System.String data id of a target NYM record Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a System.String containing the request JSON. BuildNymRequestAsync(String, String, String, String, String) Builds a ledger request to store a NYM. Declaration public static Task<string> BuildNymRequestAsync(string submitterDid, string targetDid, string verKey, string alias, string role) Parameters Type Name Description System.String submitterDid The DID of the party who will submit the request to the ledger. System.String targetDid The DID the NYM belongs to. System.String verKey The verification key for the NYM. System.String alias The alias for the NYM. System.String role The role of the NYM. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a System.String containing the request JSON. Remarks Builds a request message that is suitable for storing a NYM for the targetDid on the ledger. Only the submitterDid and targetDid parameters are required, however the other parameters provide greater control over the process. Normally the targetDid and verKey parameters would be from values generated by a prior call to Hyperledger.Indy.SignusApi.Signus.CreateAndStoreMyDidAsync(Hyperledger.Indy.WalletApi.Wallet,System.String) . The role parameter dictates what permissions the NYM will have - valid values are 'STEWARD' and 'TRUSTEE' and 'TRUST_ANCHOR'. BuildPoolConfigRequestAsync(String, Boolean, Boolean) Declaration public static Task<string> BuildPoolConfigRequestAsync(string submitterDid, bool writes, bool force) Parameters Type Name Description System.String submitterDid System.Boolean writes System.Boolean force Returns Type Description System.Threading.Tasks.Task < System.String > BuildPoolUpgradeRequestAsync(String, String, String, String, String, Int32, String, String, Boolean, Boolean) Declaration public static Task<string> BuildPoolUpgradeRequestAsync(string submitterDid, string name, string version, string action, string sha256, int timeout, string schedule, string justification, bool reinstall, bool force) Parameters Type Name Description System.String submitterDid System.String name System.String version System.String action System.String sha256 System.Int32 timeout System.String schedule System.String justification System.Boolean reinstall System.Boolean force Returns Type Description System.Threading.Tasks.Task < System.String > BuildRevocRegDefRequestAsync(String, String) Declaration public static Task<string> BuildRevocRegDefRequestAsync(string submitterDid, string data) Parameters Type Name Description System.String submitterDid System.String data Returns Type Description System.Threading.Tasks.Task < System.String > BuildRevocRegEntryRequestAsync(String, String, String, String) Declaration public static Task<string> BuildRevocRegEntryRequestAsync(string submitterDid, string revocRegDefId, string revDefType, string value) Parameters Type Name Description System.String submitterDid System.String revocRegDefId System.String revDefType System.String value Returns Type Description System.Threading.Tasks.Task < System.String > BuildSchemaRequestAsync(String, String) Builds a SCHEMA ledger request to store a schema. Declaration public static Task<string> BuildSchemaRequestAsync(string submitterDid, string data) Parameters Type Name Description System.String submitterDid The DID of the submitter. System.String data The JSON schema. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a System.String containing the request JSON. Remarks Builds a request message that is suitable for storing a schema on a ledger. Schema specify the data types and formats which are used to make up claims. The data parameter must contain a JSON string with the members \"name\", \"version\" and \"attr_names\" that define the schema. For example the following JSON describes a schema with the name \"access\" that is version 1.0 of the schema and specifies the attributes \"ip\", \"port\", and \"keys\": { \"name\":\"access\", \"version\":\"1.0\", \"attr_names\":[\"ip\",\"port\",\"keys\"] } ParseGetCredDefResponseAsync(String) Declaration public static Task<ParseResponseResult> ParseGetCredDefResponseAsync(string getCredDefResponse) Parameters Type Name Description System.String getCredDefResponse Returns Type Description System.Threading.Tasks.Task < ParseResponseResult > ParseGetRevocRegDefResponseAsync(String) Declaration public static Task<ParseResponseResult> ParseGetRevocRegDefResponseAsync(string getRevocRegDefResponse) Parameters Type Name Description System.String getRevocRegDefResponse Returns Type Description System.Threading.Tasks.Task < ParseResponseResult > ParseGetRevocRegDeltaResponseAsync(String) Declaration public static Task<ParseRegistryResponseResult> ParseGetRevocRegDeltaResponseAsync(string getRevocRegDeltaResponse) Parameters Type Name Description System.String getRevocRegDeltaResponse Returns Type Description System.Threading.Tasks.Task < ParseRegistryResponseResult > ParseGetRevocRegResponseAsync(String) Declaration public static Task<ParseRegistryResponseResult> ParseGetRevocRegResponseAsync(string getRevocRegResponse) Parameters Type Name Description System.String getRevocRegResponse Returns Type Description System.Threading.Tasks.Task < ParseRegistryResponseResult > ParseGetSchemaResponseAsync(String) Declaration public static Task<ParseResponseResult> ParseGetSchemaResponseAsync(string getSchemaResponse) Parameters Type Name Description System.String getSchemaResponse Returns Type Description System.Threading.Tasks.Task < ParseResponseResult > SignAndSubmitRequestAsync(Pool, Wallet, String, String) Signs and submits a request to the validator pool. Declaration public static Task<string> SignAndSubmitRequestAsync(Pool pool, Wallet wallet, string submitterDid, string requestJson) Parameters Type Name Description Pool pool The validator pool to submit the request to. Wallet wallet The wallet containing the submitter keys to sign the request with. System.String submitterDid The DID of the submitter identity. System.String requestJson The request JSON to sign and submit. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a JSON System.String containing the result of submission when the operation completes. Remarks This method adds information associated with the submitter specified by the submitterDid to the JSON provided in the requestJson parameter then signs it with the submitter's signing key from the provided wallet and sends the signed request message to the specified validator pool . SignRequestAsync(Wallet, String, String) Signs a request message. Declaration public static Task<string> SignRequestAsync(Wallet wallet, string submitterDid, string requestJson) Parameters Type Name Description Wallet wallet The wallet to use for signing. System.String submitterDid The DID of the submitter identity in the provided wallet. System.String requestJson The request JSON to sign. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous task that resolves to a System.String containing the signed message. Remarks This method adds information associated with the submitter specified by the submitterDid to the JSON provided in the requestJson parameter then signs it with the submitter's signing key from the provided wallet. SubmitRequestAsync(Pool, String) Submits a request to the ledger. Declaration public static Task<string> SubmitRequestAsync(Pool pool, string requestJson) Parameters Type Name Description Pool pool The validator pool to submit the request to. System.String requestJson The request to submit. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a JSON System.String containing the results when the operation completes. Remarks This method publishes a message to the validator pool specified in the pool parameter as-is and assumes that the message was previously prepared for submission. Requests can be signed prior to using this call to the SignRequestAsync(Wallet, String, String) method, or messages can be both signed and submitted using the SignAndSubmitRequestAsync(Pool, Wallet, String, String) method."
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.AddRequestFeesDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.AddRequestFeesDelegate.html",
    "title": "Class NativeMethods.AddRequestFeesDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.AddRequestFeesDelegate Inheritance System.MulticastDelegate NativeMethods.AddRequestFeesDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class AddRequestFeesDelegate : MulticastDelegate Constructors AddRequestFeesDelegate(Object, IntPtr) Declaration public AddRequestFeesDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string req_with_fees_json, string payment_method, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String req_with_fees_json System.String payment_method System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String, String) Declaration public virtual void Invoke(int command_handle, int err, string req_with_fees_json, string payment_method) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String req_with_fees_json System.String payment_method"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParseGetUtxoResponseDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.ParseGetUtxoResponseDelegate.html",
    "title": "Class NativeMethods.ParseGetUtxoResponseDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.ParseGetUtxoResponseDelegate Inheritance System.MulticastDelegate NativeMethods.ParseGetUtxoResponseDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class ParseGetUtxoResponseDelegate : MulticastDelegate Constructors ParseGetUtxoResponseDelegate(Object, IntPtr) Declaration public ParseGetUtxoResponseDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string utxo_json, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String utxo_json System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String) Declaration public virtual void Invoke(int command_handle, int err, string utxo_json) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String utxo_json"
  },
  "api/Hyperledger.Indy.AnonCredsApi.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.html",
    "title": "Namespace Hyperledger.Indy.AnonCredsApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.AnonCredsApi Classes AnonCreds Provides methods for managing anonymous credentials. AnoncredsAccumulatorFullException Exception thrown when an anoncreds accumulator is full. AnoncredsNotIssuedException Exception thrown when an anoncreds is not issued. ClaimRevokedException Exception thrown when a claim has been revoked. DuplicateMasterSecretNameException Exception thrown when an attempt to create a master-secret with the same name as an existing master-secret. InvalidUserRevocIndexException Exception thrown when an invalid user revocation registry index is used. IssuerCreateAndStoreCredentialDefResult IssuerCreateAndStoreRevocRegResult IssuerCreateCredentialResult IssuerCreateSchemaResult ProofRejectedException Exception thrown when a proof has been rejected. ProverCreateCredentialRequestResult RevocationRegistryFullException Exception thrown when attempting to use a full revocation registry."
  },
  "api/Hyperledger.Indy.DidApi.CreateAndStoreMyDidResult.html": {
    "href": "api/Hyperledger.Indy.DidApi.CreateAndStoreMyDidResult.html",
    "title": "Class CreateAndStoreMyDidResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class CreateAndStoreMyDidResult Inheritance System.Object CreateAndStoreMyDidResult Namespace : Hyperledger.Indy.DidApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class CreateAndStoreMyDidResult : Object Properties Did Declaration public string Did { get; } Property Value Type Description System.String VerKey Declaration public string VerKey { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.IndyException.html": {
    "href": "api/Hyperledger.Indy.IndyException.html",
    "title": "Class IndyException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class IndyException Exception indicating a problem originating from the Indy SDK. Inheritance System.Exception IndyException AnoncredsAccumulatorFullException AnoncredsNotIssuedException ClaimRevokedException DuplicateMasterSecretNameException InvalidUserRevocIndexException ProofRejectedException RevocationRegistryFullException UnknownCryptoException InvalidParameterException InvalidStateException InvalidStructureException IOException InvalidLedgerTransactionException LedgerConsensusException LedgerSecurityException InvalidPoolException PoolConfigNotCreatedException PoolLedgerConfigExistsException PoolLedgerTerminatedException DuplicateWalletTypeException InvalidWalletException UnknownWalletTypeException WalletAlreadyOpenedException WalletExistsException WalletValueNotFoundException WrongWalletForPoolException Namespace : Hyperledger.Indy Assembly : Hyperledger.Indy.Sdk.dll Syntax public class IndyException : Exception Properties SdkErrorCode Gets the error code for the exception. Declaration public int SdkErrorCode { get; } Property Value Type Description System.Int32"
  },
  "api/Hyperledger.Indy.WalletApi.Wallet.html": {
    "href": "api/Hyperledger.Indy.WalletApi.Wallet.html",
    "title": "Class Wallet | Hyperledger Indy .NET Wrapper",
    "keywords": "Class Wallet Represents a wallet that stores key value records and provides static methods for managing wallets. Inheritance System.Object Wallet Implements System.IDisposable Namespace : Hyperledger.Indy.WalletApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class Wallet : Object, IDisposable Methods CloseAsync() Closes the wallet. Declaration public Task CloseAsync() Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task with no return value that completes when the operation completes. CreateWalletAsync(String, String, String, String, String) Creates a new wallet. Declaration public static Task CreateWalletAsync(string poolName, string name, string type, string config, string credentials) Parameters Type Name Description System.String poolName The name of the pool the wallet is associated with. System.String name The name of the wallet. System.String type The type of the wallet. System.String config The wallet configuration JSON. System.String credentials The wallet credentials JSON or null to use the default credentials. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task with no return value the completes when the operation has finished. Remarks Each created wallet is given a name which is then subsequently used to open it with the OpenWalletAsync(String, String, String) or delete it using the DeleteWalletAsync(String, String) static methods. note Wallet names must be unique within a pool. When creating a new Wallet the type parameter can be null or \"default\" to use the default wallet implementation, or a type name specified in an earlier call to the RegisterWalletTypeAsync(String, WalletType) method to use a custom wallet implementation. Attempting to use a wallet type that hasn't previously been registered will result in an error. The config parameter allows configuration values to be passed to the wallet when it is created. When using the default wallet this value can be null to use the default wallet configuration or a JSON string with the following format can be used: { \"freshness_time\": int } The value of the freshness_time key is an integer representing the number of seconds a value in the wallet will remain valid before expiring. If not specified the default value for freshness_time is 24 * 60 seconds. If using a custom wallet type the content of the config parameter can be any string value; it is up to the custom wallet type implementer to interpret the value. The credentials parameter is unused in the default wallet at present, however the value can be used by custom wallet implementations; it is up to the custom wallet type implementer to interpret the value. DeleteWalletAsync(String, String) Deletes a wallet. Declaration public static Task DeleteWalletAsync(string name, string credentials) Parameters Type Name Description System.String name The name of the wallet to delete. System.String credentials The wallet credentials. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task with no return value that completes when the operation completes. Remarks Deletes a wallet created earlier using the CreateWalletAsync(String, String, String, String, String) by name. The credentials parameter is unused in the default wallet at present, however the value can be used by custom wallet implementations; it is up to the custom wallet type implementer to interpret the value. Dispose() Disposes of resources. Declaration public void Dispose() Finalize() Finalizes the resource during GC if it hasn't been already. Declaration protected override void Finalize() ListWalletsAsync() Lists the wallets async. Declaration public static Task<string> ListWalletsAsync() Returns Type Description System.Threading.Tasks.Task < System.String > The wallets async. OpenWalletAsync(String, String, String) Opens a Wallet. Declaration public static Task<Wallet> OpenWalletAsync(string name, string runtimeConfig, string credentials) Parameters Type Name Description System.String name The name of the Wallet to open. System.String runtimeConfig The runtime configuration to override the configuration the wallet was created with. System.String credentials The wallet credentials. Returns Type Description System.Threading.Tasks.Task < Wallet > An asynchronous System.Threading.Tasks.Task<> that resolves to a Wallet instance when the operation completes. Remarks Opens a wallet by name using the name of a wallet created earlier using the CreateWalletAsync(String, String, String, String, String) method. note Attempting to open the same wallet more than once will result in an error. The runtimeConfig parameter allows the default configuration of the wallet to be overridden while opening the wallet; this does not replace the configuration registered when the wallet was created but instead overrides it for the duration of this opening only. See the CreateWalletAsync(String, String, String, String, String) method for details on the configuration string supported by the default wallet type; custom wallet types will can support their own format. The credentials parameter is unused in the default wallet at present, however the value can be used by custom wallet implementations; it is up to the custom wallet type implementer to interpret the value. RegisterWalletTypeAsync(String, WalletType) Registers a custom wallet type implementation. Declaration public static Task RegisterWalletTypeAsync(string typeName, WalletType walletType) Parameters Type Name Description System.String typeName The name of the custom wallet type. WalletType walletType An instance of a class derived from WalletType containing the logic for the custom wallet type. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task with no return value that completes when the registration is complete. Remarks This method allows custom wallet implementations to be registered at runtime so that alternatives to the default wallet type can be used. Implementing a custom wallet is achieved by deriving from the WalletType class - see the WalletType and ICustomWallet classes for further detail. Each custom wallet type is registered with a name which can subsequently be used when creating a new wallet using the CreateWalletAsync(String, String, String, String, String) method. Implements System.IDisposable"
  },
  "api/Hyperledger.Indy.AnonCredsApi.DuplicateMasterSecretNameException.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.DuplicateMasterSecretNameException.html",
    "title": "Class DuplicateMasterSecretNameException | Hyperledger Indy .NET Wrapper",
    "keywords": "Class DuplicateMasterSecretNameException Exception thrown when an attempt to create a master-secret with the same name as an existing master-secret. Inheritance System.Exception IndyException DuplicateMasterSecretNameException Inherited Members IndyException.SdkErrorCode Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class DuplicateMasterSecretNameException : IndyException"
  },
  "api/Hyperledger.Indy.PoolApi.html": {
    "href": "api/Hyperledger.Indy.PoolApi.html",
    "title": "Namespace Hyperledger.Indy.PoolApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.PoolApi Classes InvalidPoolException Exception thrown when attempting to use a pool that has been closed or is invalid. Pool Represents a connection to a pool of ledger nodes and provides static methods for managing connections to pools. PoolConfigNotCreatedException Exception thrown when attempting to open pool which does not yet have a created configuration. PoolLedgerConfigExistsException Exception thrown when attempting to create a pool ledger config with same name as an existing pool ledger config. PoolLedgerTerminatedException Exception thrown when the pool ledger was terminated."
  },
  "api/Hyperledger.Indy.WalletApi.html": {
    "href": "api/Hyperledger.Indy.WalletApi.html",
    "title": "Namespace Hyperledger.Indy.WalletApi | Hyperledger Indy .NET Wrapper",
    "keywords": "Namespace Hyperledger.Indy.WalletApi Classes DuplicateWalletTypeException Exception thrown when registering a wallet type that has already been registered. InvalidWalletException Exception thrown when an attempt is made to use a closed or invalid wallet. UnknownWalletTypeException Exception thrown when attempting to open a wallet with a type that has not been registered. Wallet Represents a wallet that stores key value records and provides static methods for managing wallets. WalletAlreadyOpenedException Exception thrown when attempting to open a wallet that was already opened. WalletExistsException Exception thrown when creating a wallet and a wallet with the same name already exists. WalletType Base type for implementing custom wallet types. WalletValueNotFoundException Exception thrown when requesting a value from a wallet and the specified key does not exist. WrongWalletForPoolException Exception thrown when attempting to use a wallet with the wrong pool. Interfaces ICustomWallet Features all custom wallets must implement."
  },
  "api/Hyperledger.Indy.CryptoApi.Crypto.html": {
    "href": "api/Hyperledger.Indy.CryptoApi.Crypto.html",
    "title": "Class Crypto | Hyperledger Indy .NET Wrapper",
    "keywords": "Class Crypto Provides methods for performing . Inheritance System.Object Crypto Namespace : Hyperledger.Indy.CryptoApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public static class Crypto : Object Methods AnonCryptAsync(String, Byte[]) Declaration public static Task<byte[]> AnonCryptAsync(string theirVk, byte[] message) Parameters Type Name Description System.String theirVk System.Byte [] message Returns Type Description System.Threading.Tasks.Task < System.Byte []> AnonDecryptAsync(Wallet, String, Byte[]) Declaration public static Task<byte[]> AnonDecryptAsync(Wallet wallet, string myVk, byte[] encryptedMessage) Parameters Type Name Description Wallet wallet System.String myVk System.Byte [] encryptedMessage Returns Type Description System.Threading.Tasks.Task < System.Byte []> AuthCryptAsync(Wallet, String, String, Byte[]) Declaration public static Task<byte[]> AuthCryptAsync(Wallet wallet, string myVk, string theirVk, byte[] message) Parameters Type Name Description Wallet wallet System.String myVk System.String theirVk System.Byte [] message Returns Type Description System.Threading.Tasks.Task < System.Byte []> AuthDecryptAsync(Wallet, String, Byte[]) Declaration public static Task<AuthDecryptResult> AuthDecryptAsync(Wallet wallet, string myVk, byte[] message) Parameters Type Name Description Wallet wallet System.String myVk System.Byte [] message Returns Type Description System.Threading.Tasks.Task < AuthDecryptResult > CreateKeyAsync(Wallet, String) Creates a key in the provided wallet. Declaration public static Task<string> CreateKeyAsync(Wallet wallet, string keyJson) Parameters Type Name Description Wallet wallet The wallet to create the key in. System.String keyJson The JSON string describing the key. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a string containing the verification key of the generated key-pair. Remarks The keyJson parameter must contain a JSON object although all properties of the object are optional. The schema the object must conform to are as follows: { \"seed\": string, // Optional (if not set random one will be used); Seed information that allows deterministic key creation. \"crypto_type\": string, // Optional (if not set then ed25519 curve is used); Currently only 'ed25519' value is supported for this field. } The seed member is optional and is used to specify the seed to use for key creation - if this parameter is not set then a random seed will be used. The crypto_type member is also optional and will default to ed25519 curve if not set. note At present the crypto_type member only supports the value 'ed22519'. Exceptions Type Condition InvalidStructureException Thrown if the value passed to the keyJson parameter is malformed or contains invalid data. GetKeyMetadataAsync(Wallet, String) Gets the user defined metadata stored against a key-pair in the specified wallet. Declaration public static Task<string> GetKeyMetadataAsync(Wallet wallet, string verKey) Parameters Type Name Description Wallet wallet The wallet containing the key-pair. System.String verKey The verification key of the key-pair. Returns Type Description System.Threading.Tasks.Task < System.String > An asynchronous System.Threading.Tasks.Task<> that resolves to a string containing the metadata associated with the key-pair. Remarks If no metadata is stored against the specified key-pair null will be returned. Exceptions Type Condition WalletValueNotFoundException Thrown if the wallet does not contain a key-pair matching the provided verKey or they key-pair has no metadata. SetKeyMetadataAsync(Wallet, String, String) Sets user defined metadata for a key-pair in the specified wallet. Declaration public static Task SetKeyMetadataAsync(Wallet wallet, string verKey, string metadata) Parameters Type Name Description Wallet wallet The wallet containing the key. System.String verKey The verification key of the key pair. System.String metadata The metadata to set. Returns Type Description System.Threading.Tasks.Task An asynchronous System.Threading.Tasks.Task that completes when the operation completes. Remarks Any existing metadata stored for the key-pair will be replaced. Exceptions Type Condition WalletValueNotFoundException Thrown if the wallet does not contain a key-pair matching the provided verKey . SignAsync(Wallet, String, Byte[]) Signs the provided message with the provided key. Declaration public static Task<byte[]> SignAsync(Wallet wallet, string myVk, byte[] message) Parameters Type Name Description Wallet wallet The wallet containing the key-pair to sign with. System.String myVk The verification key of the key-pair to sign with. System.Byte [] message The message to sign Returns Type Description System.Threading.Tasks.Task < System.Byte []> An asynchronous System.Threading.Tasks.Task<> that resolves to a byte array containing the signature. Remarks The key provided as the myVk parameter must have previously been stored in the wallet using the CreateKeyAsync(Wallet, String) method or the Hyperledger.Indy.SignusApi.Signus.CreateAndStoreMyDidAsync(Hyperledger.Indy.WalletApi.Wallet,System.String) method. note To use DID keys with this method call the Hyperledger.Indy.SignusApi.Signus.KeyForDidAsync(Hyperledger.Indy.PoolApi.Pool,Hyperledger.Indy.WalletApi.Wallet,System.String) with the desired DID to get its verification key which can be used as the myVk parameter when calling this method. Exceptions Type Condition WalletValueNotFoundException Thrown if myVk is not present in the wallet . VerifyAsync(String, Byte[], Byte[]) Verifies a message signature with a verification key. Declaration public static Task<bool> VerifyAsync(string theirVk, byte[] message, byte[] signature) Parameters Type Name Description System.String theirVk The verification key belonging to the party that signed the message. System.Byte [] message The message that was signed. System.Byte [] signature The signature for the message. Returns Type Description System.Threading.Tasks.Task < System.Boolean > An asynchronous System.Threading.Tasks.Task<> that, when the operation completes, resolves to true if the signature was valid, otherwise false."
  },
  "api/Hyperledger.Indy.ErrorCode.html": {
    "href": "api/Hyperledger.Indy.ErrorCode.html",
    "title": "Class ErrorCode | Hyperledger Indy .NET Wrapper",
    "keywords": "Class ErrorCode Error codes Inheritance System.Enum ErrorCode Namespace : Hyperledger.Indy Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class ErrorCode : Enum Fields AnoncredsAccumulatorIsFull Accumulator is full Declaration public const ErrorCode AnoncredsAccumulatorIsFull Field Value Type Description ErrorCode AnoncredsClaimRevoked Claim revoked Declaration public const ErrorCode AnoncredsClaimRevoked Field Value Type Description ErrorCode AnoncredsInvalidUserRevocIndex Invalid user revocation index Declaration public const ErrorCode AnoncredsInvalidUserRevocIndex Field Value Type Description ErrorCode AnoncredsMasterSecretDuplicateNameError Attempt to generate master secret with duplicated name Declaration public const ErrorCode AnoncredsMasterSecretDuplicateNameError Field Value Type Description ErrorCode AnoncredsNotIssuedError Not issued error Declaration public const ErrorCode AnoncredsNotIssuedError Field Value Type Description ErrorCode AnoncredsProofRejected Proof rejected Declaration public const ErrorCode AnoncredsProofRejected Field Value Type Description ErrorCode AnoncredsRevocationRegistryFullError Revocation registry is full and creation of new registry is necessary Declaration public const ErrorCode AnoncredsRevocationRegistryFullError Field Value Type Description ErrorCode CommonInvalidParam1 Caller passed invalid value as param 1 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam1 Field Value Type Description ErrorCode CommonInvalidParam10 Caller passed invalid value as param 10 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam10 Field Value Type Description ErrorCode CommonInvalidParam11 Caller passed invalid value as param 11 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam11 Field Value Type Description ErrorCode CommonInvalidParam12 Caller passed invalid value as param 12 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam12 Field Value Type Description ErrorCode CommonInvalidParam2 Caller passed invalid value as param 2 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam2 Field Value Type Description ErrorCode CommonInvalidParam3 Caller passed invalid value as param 3 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam3 Field Value Type Description ErrorCode CommonInvalidParam4 Caller passed invalid value as param 4 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam4 Field Value Type Description ErrorCode CommonInvalidParam5 Caller passed invalid value as param 5 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam5 Field Value Type Description ErrorCode CommonInvalidParam6 Caller passed invalid value as param 6 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam6 Field Value Type Description ErrorCode CommonInvalidParam7 Caller passed invalid value as param 7 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam7 Field Value Type Description ErrorCode CommonInvalidParam8 Caller passed invalid value as param 8 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam8 Field Value Type Description ErrorCode CommonInvalidParam9 Caller passed invalid value as param 9 (null, invalid json and etc..) Declaration public const ErrorCode CommonInvalidParam9 Field Value Type Description ErrorCode CommonInvalidState Invalid library state was detected in runtime. It signals library bug Declaration public const ErrorCode CommonInvalidState Field Value Type Description ErrorCode CommonInvalidStructure Object (json, config, key, claim and etc...) passed by library caller has invalid structure Declaration public const ErrorCode CommonInvalidStructure Field Value Type Description ErrorCode CommonIOError IO Error Declaration public const ErrorCode CommonIOError Field Value Type Description ErrorCode LedgerInvalidTransaction Attempt to send unknown or incomplete transaction message Declaration public const ErrorCode LedgerInvalidTransaction Field Value Type Description ErrorCode LedgerNoConsensusError No consensus during ledger operation Declaration public const ErrorCode LedgerNoConsensusError Field Value Type Description ErrorCode LedgerSecurityError Attempt to send transaction without the necessary privileges Declaration public const ErrorCode LedgerSecurityError Field Value Type Description ErrorCode PoolLedgerConfigAlreadyExistsError Attempt to create pool ledger config with name used for another existing pool Declaration public const ErrorCode PoolLedgerConfigAlreadyExistsError Field Value Type Description ErrorCode PoolLedgerInvalidPoolHandle Caller passed invalid pool ledger handle Declaration public const ErrorCode PoolLedgerInvalidPoolHandle Field Value Type Description ErrorCode PoolLedgerNotCreatedError Trying to open pool ledger that wasn't created before Declaration public const ErrorCode PoolLedgerNotCreatedError Field Value Type Description ErrorCode PoolLedgerTerminated Pool ledger terminated Declaration public const ErrorCode PoolLedgerTerminated Field Value Type Description ErrorCode PoolLedgerTimeout Declaration public const ErrorCode PoolLedgerTimeout Field Value Type Description ErrorCode SignusUnknownCryptoError Unknown format of DID entity keys Declaration public const ErrorCode SignusUnknownCryptoError Field Value Type Description ErrorCode Success Call succeeded. Declaration public const ErrorCode Success Field Value Type Description ErrorCode value__ Declaration public int value__ Field Value Type Description System.Int32 WalletAlreadyExistsError Attempt to create wallet with name used for another exists wallet Declaration public const ErrorCode WalletAlreadyExistsError Field Value Type Description ErrorCode WalletAlreadyOpenedError Trying to open wallet that was opened already Declaration public const ErrorCode WalletAlreadyOpenedError Field Value Type Description ErrorCode WalletIncompatiblePoolError Trying to use wallet with pool that has different name Declaration public const ErrorCode WalletIncompatiblePoolError Field Value Type Description ErrorCode WalletInvalidHandle Caller passed invalid wallet handle Declaration public const ErrorCode WalletInvalidHandle Field Value Type Description ErrorCode WalletNotFoundError Requested entity id isn't present in wallet Declaration public const ErrorCode WalletNotFoundError Field Value Type Description ErrorCode WalletTypeAlreadyRegisteredError Attempt to register already existing wallet type Declaration public const ErrorCode WalletTypeAlreadyRegisteredError Field Value Type Description ErrorCode WalletUnknownTypeError Unknown type of wallet was passed on create_wallet Declaration public const ErrorCode WalletUnknownTypeError Field Value Type Description ErrorCode"
  },
  "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildGetTxnFeesReqDelegate.html": {
    "href": "api/Hyperledger.Indy.PaymentsApi.NativeMethods.BuildGetTxnFeesReqDelegate.html",
    "title": "Class NativeMethods.BuildGetTxnFeesReqDelegate | Hyperledger Indy .NET Wrapper",
    "keywords": "Class NativeMethods.BuildGetTxnFeesReqDelegate Inheritance System.MulticastDelegate NativeMethods.BuildGetTxnFeesReqDelegate Namespace : Hyperledger.Indy.PaymentsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public sealed class BuildGetTxnFeesReqDelegate : MulticastDelegate Constructors BuildGetTxnFeesReqDelegate(Object, IntPtr) Declaration public BuildGetTxnFeesReqDelegate(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(Int32, Int32, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(int command_handle, int err, string get_txn_fees_json, AsyncCallback callback, object object) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String get_txn_fees_json System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(Int32, Int32, String) Declaration public virtual void Invoke(int command_handle, int err, string get_txn_fees_json) Parameters Type Name Description System.Int32 command_handle System.Int32 err System.String get_txn_fees_json"
  },
  "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateSchemaResult.html": {
    "href": "api/Hyperledger.Indy.AnonCredsApi.IssuerCreateSchemaResult.html",
    "title": "Class IssuerCreateSchemaResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class IssuerCreateSchemaResult Inheritance System.Object IssuerCreateSchemaResult Namespace : Hyperledger.Indy.AnonCredsApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class IssuerCreateSchemaResult : Object Constructors IssuerCreateSchemaResult(String, String) Declaration public IssuerCreateSchemaResult(string schemaId, string schemaJson) Parameters Type Name Description System.String schemaId System.String schemaJson Properties SchemaId Declaration public string SchemaId { get; } Property Value Type Description System.String SchemaJson Declaration public string SchemaJson { get; } Property Value Type Description System.String"
  },
  "api/Hyperledger.Indy.CryptoApi.AuthDecryptResult.html": {
    "href": "api/Hyperledger.Indy.CryptoApi.AuthDecryptResult.html",
    "title": "Class AuthDecryptResult | Hyperledger Indy .NET Wrapper",
    "keywords": "Class AuthDecryptResult Inheritance System.Object AuthDecryptResult Namespace : Hyperledger.Indy.CryptoApi Assembly : Hyperledger.Indy.Sdk.dll Syntax public class AuthDecryptResult : Object Constructors AuthDecryptResult(String, Byte[]) Declaration public AuthDecryptResult(string their_vk, byte[] messageData) Parameters Type Name Description System.String their_vk System.Byte [] messageData Properties MessageData Declaration public byte[] MessageData { get; } Property Value Type Description System.Byte [] TheirVk Declaration public string TheirVk { get; } Property Value Type Description System.String"
  }
}