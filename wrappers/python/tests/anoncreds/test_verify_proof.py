from indy.anoncreds import verifier_verify_proof
from indy.error import ErrorCode, IndyError

import json
import pytest

proof = {
    "proof": {
        "proofs": [
            {
                "primary_proof": {
                    "eq_proof": {"revealed_attrs": {"name": "1139481716457488690172217916278103335"},
                                 "a_prime": "32089897157624832283198840330786910110050115462404692473042266562047233306881984826607216499704819585468096701786563714255392673804592236977738599008156478505291804895531838867671647228339551778188764449991774915449415603679783675099147045838748688813672813723951835058216297685747794020068221461614764672229563576867413468802583141327218425244074002491444987846984969817304170993334278665337262603023542986071231355693275614904300468383752821369831826330280535517475082742504608755478405454944010312503168503634635794723930449541425848383731272150901744330742972522735729709517623849758535239888191498346331084325668",
                                 "e": "74605605760901549552778232007305625162477324000566957825133523835888855284958109689356931911407175433523313833583170689527536892157994574",
                                 "v": "68748441900049854379976505817330811103953796692705615687884382980120359110280680129955313481554309958292034017596131025936998653474166978368347851164067657749669489135049014879544113019726774335115742918411313035246976019684518583686321801961882749120382671688101698364974254539821990867291618005244451244106387157628277298319198358130544390977889714141807077913543569168655502324701618904915547719768923203544317823848379625976651163929622596371440005429928589141555504442698803878892651948196159639723941768293144806961476659838402889303216028106009145195770820185644719952964634154379122778194000776344890154072489098275094214434084170105848006068360736237526180036192595521189437961011661514783760538221856945406126278634911209417059137956649707294778023512985749025965213314427019423074981393144986642232591954110616913761084221225422471534207221057376579765109096676609072525147704853000280805999274719985232435301",
                                 "m": {
                                     "age": "655443106470818200737541753046084124880166064786557856082292213751364105532647074213842533033826105166532587076989974783153736263866385415232244553018260770376235720905333495078",
                                     "sex": "231103152386517447297181981502359530820722059705112383025739536379017154517702446522489719997434908402513914184375284507575861796027037039952308473904457067178116103423002356683",
                                     "height": "12094056995119092754590493466536382109909561746888466418183355127436098659050161169409824787228354288615381080540725393264051394129824268302596979911375991166807267955016470155493"},
                                 "m1": "7754305522386025105064484040123000963089265136864898662502350511149379216329047088334080451886528879678140997675189952127483692078747570774133081717573611238366112948263156012699",
                                 "m2": "16044144085434730416865020385335481531077693293358426212318326539351335783519680705192452684988089128788119383825003957724721902542423323521323470231520254580965314630468032585032"},
                    "ge_proofs": [{"u": {
                        "2": "1231262787976659380825644140864861629269205683152957901837923968523684379652178984095808731744639225552271851200761392940160009610341872578095970617412357212867633344503482158712",
                        "0": "3000901250343906747598465485728030384815296406453544614287894106842594073224667406439900875799176997507789708191293359521296314445840449894505154605226385075290308441623368338290",
                        "3": "7351408247455608542584073958600870657552754258067034872028234440943703544510426264414459642783204276359494798633061272812125177751316702247729357654388029624544766293710952723238",
                        "1": "15660931428214840803831183982749797736133467031969932038777693967055697879497017643612394035356518454356759955956496886941968270649583484107938982118182408061000035456063009052964"},
                        "r": {
                            "DELTA": "1231505491818995077307984616723390137095119537054120030368466684078990185259398949258220658811749374879402191641510116517359715820536117705181879826364468883849870933197787467594844613766164491159874943861982066158060025707163958375647433878049766605411392319915273376862636247599415100969154606341745794286734369155151839938490620358567735682915413071180454102162721622364623824902571635209020200840457399658292565802960611340650970412617672179016378645703452625226415156179772662016874737448465379090204073095379830880790763941126726978623342627103082347133786023229373308420895721663676366025722387869722684036561724158675270587820904286961257090796781620592962735877363730256335211469939751468220094567384334279167",
                            "2": "402177197026155274516723970397518471130692196762863203098296756640900603879864150885021230826074802405189368824919950219536983138123946077708286511710000600678798548398449589387087974241773725798881519038295530491143172191013023341129338172273348903939843880565601954850899426346505224370426747933507009265235465062856790323484105363480367145308742353357935212315863817536652719355296609616545762305159570265713363184051297099076778390730800874357728995048818828824017348985889668259796333334977296175134028884139711183017377781220953473642198500213723904363805625518584526583053834625680761199925521802878264813592227551924394788705888617222693364201403939575732996985191651850374517573315763512807661867584087462600",
                            "0": "847631804591735677899846242119796023912102445197128086881429369628201776087445265010867307380042760662283023519819673043757960573849186963323414816676725865218884919663741216763413650158516571500427310197182772167328508069269062645022026489605428865685963906555908622123856546640299863700056561468156552423549647275758747950940046174360298945344719494722214275124117828854006479417333986801856823117390034205687322007331990676768880312982904124365099292525085625319618787911938145557556896251122573705470711909015045390892156858608882957357165431826128643246547341425367775185232005033175360320347194807550845607163463273933876377433219075682046012475948230064653817476321480291209581231108142366271618794498305912877",
                            "3": "183533515646338662055710969399753107703101577819670285981104581835455068470318853144996144513418284206781967661707018680580238881556909916959953015116591273186253724615391717206835296525452721864502298557476677887168594335118140646653939308064018839940605984145875083572601247872397810237046498732694900355253450476706821921706693784853685368250047439517090432266605854439120749032754760253204828900484916061550788900895951571474107550665393942430767800734575349339484263266931504325541294960055657421135497251310925034509135738953282503605099884071542067664022041798995128430543688175476819334529538014650497097254434109941089293943734223622415198875921749561474887285657716260569881903726684992750510665803115206605",
                            "1": "1382744421945206168723212301160050681680260847662826632240974981370272839042150157297126548924575014336126300194439972437247090758629619973550859792594011688120232762959709669559316027482000037071528512918336893410423722348445691379191450599391429083227412253401156467342343912034372366093327539143980056020672606811325764644845467103291274815415357615667150774728094081353401578792608745580972566667379546355454038420661405224500340249599917195914929237594008484056314782013306958772401100844068179325869776989633222177719594764790826760673521694337848168089283939623526047587983417046360385276905115529730720589596359879136293282239557856481518245168217281186831988552027067423688873666148964944618697108329461450130"},
                        "mj": "655443106470818200737541753046084124880166064786557856082292213751364105532647074213842533033826105166532587076989974783153736263866385415232244553018260770376235720905333495078",
                        "alpha": "66069197856649283943568351903446449194502959377213455274161244507909843550034416741960331534387003674441179829781649377083899693710623427902954491090947873357814884279841004604936895780577221807473801208776591269537729616701314723614512160306447074748110033562341074117243395812959099381480882318482807093769830099662150913391401100490064319813050238023409468211626465927052982200326831585319346305910969257123155815064546263754861300534588053629998248465861820563313194873770898059119634623576943261041774082764238023664215420190729002034700102970702713427279054384855870877243534142772289875815415325451965836060007974512472815623689362692336414636823109072453314727418206754076378466623541246350425984384898210218829758971328315139134409102105839344931902330575100914207425100961939113629683280565389006345343056053049993256846918181791",
                        "t": {
                            "DELTA": "81598196133611232554693676584796370302583225357432536592044590424515067501030454907409083974425206320595040117084652929947096193121371524417919836210076759557699839950716910140910444269582385310993810139316115451401729159862342159126476396873014717944509117391076347906050469643501180582091211590281678884360816745275292439155568768481655368799353981226151430948925233555510798844439492077954609938284378725390114226457095658289378019109708397062398395054532543520551827684797312917738060404181212693739410640823502418210889143216477625108629073415241961626406567931508987168033546236670905491204687454980272295840669",
                            "2": "41753219564019727410895715373004746480524507193911253940259412756593922134410512818585038667725862558282169053866358797022049239456217434410183718605769933613545933626476912187359966626407324841248522741804187097797026926708492849946699620298911516929757941156705363062523791912204233776857869157030514326050566506271611004540632275378663346576999657788139882852171572460486548041697095579265641851664691789265360456301197146292593370303479112084653078948386443258431776029150944360928793981304007928248956007155617849421338119738890688974229313022497081216099933325432403884653314514271019091716283101957490263383905",
                            "0": "59051804674243738875281963040466302751919292931798957462407785779677016254034510306472886844152855153132340774474258846314643172171179126326507035863146036118420647400141322967612440957669809335788876324124123049814982000786495406200139955244950666475179344943359751221290036000292251162093626903272528981981190093672571237756566165931709833331787266200556874431709972516572524445627219927528047340351841405719303431484828429305866686183641584580976193386940541396602757190052424179396653101629794970895952100268440260354341720699978560390767970484330599507874754096386712633844414991000335737590993099441447981045735",
                            "3": "93965195328327851914302439412271223831197800548340983119401871502285658929468706537158138439180845761657029496275433169478414280090589874375520070369058692304736308202329206758443815631369618414775938476735809130465642961950351824261763365524562271884341814106564235178274502724346847633124911779118974773211850587683630731405027675701664015958811764484438262735507190309915144680071251923255075252057725911549816410105405107136900060772765741306251450915131930418924909843204287354842880689912639860704751932553010395329436597207803611382838138605085369742297616483528830577355345927237500166003045728349481248206246",
                            "1": "95027792038803319934529180153856490766254940623721125770124307082550564342671061178102405930075092919327924624894262952020506142688274341241032007823958298264692741021774675492963792115462834033173362887498627908169138408132011279325710104685120831749551790422741880430029336116894732589415036384575979978709533833491958228375095391095534889664070769581635118979218076686533783367392039334779246786229228116005491850051473130340467669820348607289406497485814363418324569180639237673933592201131066607132354974207225272194464334162549587614144070984078076220405870413471349923182927991660785288638752109965665905359665"},
                        "predicate": {"attr_name": "age", "p_type": "GE", "value": 18}}]
                }
            }
        ],
        "aggregated_proof": {
            "c_hash": "37109754487726516312706799096867789727294572334617395400836171835413734136001",
            "c_list": [
                [254, 51, 113, 132, 5, 241, 185, 104, 42, 226, 159, 172, 164, 35, 118, 170, 209, 5, 100, 5, 169,
                 179, 171, 163, 207, 104, 121, 229, 177, 148, 158, 138, 225, 232, 48, 113, 64, 84, 88, 230, 138, 9,
                 10, 251, 220, 35, 101, 152, 31, 63, 40, 117, 193, 91, 144, 240, 79, 2, 176, 117, 64, 107, 244, 154,
                 135, 246, 58, 160, 101, 127, 134, 1, 154, 33, 59, 255, 184, 57, 8, 254, 78, 187, 213, 151, 249,
                 141, 238, 243, 118, 12, 17, 201, 180, 135, 29, 71, 215, 46, 138, 88, 240, 72, 159, 190, 106, 107,
                 228, 19, 11, 113, 248, 181, 12, 182, 82, 68, 62, 78, 183, 48, 17, 67, 153, 245, 8, 95, 113, 15, 4,
                 161, 254, 96, 21, 159, 145, 32, 191, 208, 226, 241, 190, 70, 72, 235, 180, 212, 184, 74, 46, 189,
                 105, 46, 134, 8, 194, 43, 46, 255, 186, 81, 102, 250, 87, 8, 13, 225, 180, 142, 222, 67, 90, 0,
                 181, 228, 212, 250, 181, 116, 108, 64, 190, 18, 169, 136, 94, 109, 214, 227, 212, 191, 110, 197,
                 141, 250, 64, 174, 22, 157, 113, 199, 53, 244, 22, 169, 46, 255, 53, 213, 107, 215, 156, 125, 135,
                 97, 146, 175, 26, 232, 156, 48, 61, 15, 95, 35, 149, 55, 18, 1, 240, 100, 189, 255, 175, 63, 165,
                 135, 207, 66, 47, 120, 209, 19, 212, 110, 79, 90, 129, 27, 169, 215, 31, 20, 205, 2, 131, 36],
                [1, 211, 199, 200, 59, 171, 173, 213, 255, 139, 255, 87, 243, 198, 248, 158, 156, 167, 183, 244,
                 130, 124, 94, 168, 62, 103, 190, 106, 43, 133, 14, 69, 113, 71, 78, 111, 234, 114, 89, 108, 122,
                 202, 168, 21, 128, 226, 59, 163, 97, 178, 85, 69, 10, 191, 94, 57, 113, 180, 245, 229, 124, 67,
                 255, 251, 80, 184, 4, 205, 178, 28, 29, 160, 229, 145, 112, 245, 41, 49, 4, 90, 176, 86, 200, 250,
                 162, 125, 241, 79, 206, 26, 96, 83, 188, 114, 164, 161, 169, 249, 74, 246, 71, 65, 137, 194, 74,
                 203, 105, 158, 187, 116, 203, 175, 137, 116, 193, 188, 60, 165, 203, 101, 153, 246, 196, 40, 204,
                 223, 158, 50, 142, 155, 191, 143, 74, 171, 71, 164, 246, 218, 191, 16, 8, 243, 247, 231, 96, 167,
                 249, 227, 2, 13, 71, 71, 194, 97, 207, 219, 252, 108, 164, 28, 100, 16, 19, 107, 157, 58, 143, 108,
                 94, 196, 29, 129, 48, 83, 177, 206, 184, 59, 96, 179, 56, 77, 63, 224, 113, 109, 160, 122, 42, 23,
                 6, 76, 178, 196, 17, 56, 221, 121, 178, 112, 217, 197, 55, 173, 159, 94, 207, 224, 146, 194, 229,
                 116, 139, 36, 60, 105, 170, 4, 251, 143, 155, 242, 19, 205, 101, 112, 186, 151, 67, 65, 219, 149,
                 182, 122, 211, 85, 67, 201, 154, 166, 119, 84, 141, 151, 6, 225, 106, 65, 145, 241, 127, 215, 193,
                 207, 128, 87, 231],
                [2, 240, 195, 222, 132, 39, 57, 110, 16, 25, 149, 232, 152, 79, 83, 155, 234, 87, 160, 65, 17, 247,
                 26, 97, 64, 219, 88, 80, 33, 64, 23, 3, 128, 111, 37, 80, 121, 66, 252, 48, 117, 191, 172, 158,
                 251, 211, 217, 219, 220, 44, 94, 110, 103, 29, 220, 99, 2, 17, 217, 162, 105, 199, 198, 121, 102,
                 234, 231, 215, 74, 109, 193, 207, 142, 98, 198, 63, 156, 250, 188, 215, 219, 60, 62, 94, 24, 139,
                 183, 190, 28, 25, 59, 43, 225, 62, 237, 205, 48, 205, 69, 129, 130, 33, 95, 155, 98, 111, 28, 192,
                 175, 204, 120, 143, 126, 249, 232, 102, 239, 34, 239, 73, 175, 196, 4, 34, 150, 236, 146, 129, 70,
                 154, 192, 238, 82, 88, 114, 79, 85, 192, 163, 72, 164, 151, 168, 249, 152, 212, 207, 178, 221, 184,
                 252, 246, 156, 61, 203, 61, 231, 205, 60, 6, 51, 85, 3, 72, 148, 26, 7, 225, 179, 165, 106, 215,
                 61, 224, 125, 207, 65, 22, 67, 163, 6, 138, 4, 25, 35, 179, 252, 95, 105, 50, 135, 206, 21, 234,
                 112, 57, 11, 101, 42, 142, 125, 37, 162, 139, 188, 86, 177, 167, 23, 157, 245, 48, 234, 193, 152,
                 63, 93, 145, 70, 81, 174, 1, 101, 66, 232, 185, 130, 151, 31, 89, 38, 161, 50, 164, 208, 168, 129,
                 128, 180, 164, 55, 38, 36, 214, 179, 180, 160, 95, 34, 212, 63, 167, 184, 214, 71, 59, 49],
                [1, 74, 191, 204, 47, 255, 219, 193, 253, 44, 72, 107, 177, 166, 254, 220, 149, 91, 220, 197, 194,
                 245, 239, 48, 59, 251, 185, 128, 26, 73, 162, 96, 151, 41, 236, 60, 71, 60, 125, 251, 62, 81, 94,
                 186, 226, 187, 128, 152, 60, 21, 120, 100, 86, 177, 104, 2, 114, 108, 208, 208, 20, 75, 205, 125,
                 255, 6, 63, 249, 2, 130, 61, 165, 139, 61, 198, 144, 101, 89, 83, 31, 179, 93, 124, 60, 32, 222,
                 220, 143, 11, 233, 221, 72, 216, 86, 66, 203, 215, 122, 113, 15, 140, 230, 245, 59, 235, 76, 119,
                 104, 196, 127, 54, 221, 161, 145, 72, 93, 38, 8, 51, 161, 90, 118, 253, 247, 207, 164, 143, 141,
                 213, 212, 244, 150, 156, 245, 141, 78, 45, 48, 156, 7, 151, 99, 90, 184, 72, 250, 116, 49, 83, 156,
                 86, 52, 50, 139, 150, 196, 103, 186, 208, 154, 243, 244, 169, 63, 108, 148, 162, 25, 32, 86, 83,
                 152, 45, 111, 2, 155, 223, 207, 200, 196, 44, 21, 245, 14, 13, 236, 129, 57, 33, 137, 150, 43, 135,
                 170, 152, 167, 136, 89, 55, 119, 79, 210, 184, 196, 66, 151, 34, 244, 25, 136, 173, 13, 107, 94,
                 67, 252, 130, 172, 136, 114, 28, 247, 54, 241, 203, 166, 188, 25, 42, 209, 121, 50, 158, 105, 169,
                 52, 125, 191, 38, 131, 194, 89, 64, 243, 155, 238, 232, 149, 175, 212, 131, 39, 251, 251, 98, 223,
                 97],
                [2, 232, 89, 4, 158, 137, 126, 19, 39, 77, 174, 181, 244, 4, 38, 10, 43, 152, 173, 187, 192, 169,
                 122, 251, 94, 149, 176, 147, 245, 219, 26, 39, 3, 211, 200, 108, 63, 52, 249, 56, 113, 154, 62,
                 206, 206, 25, 117, 109, 211, 226, 181, 64, 83, 25, 205, 205, 109, 65, 132, 129, 159, 91, 166, 62,
                 2, 181, 178, 213, 16, 225, 36, 217, 187, 210, 152, 129, 207, 235, 90, 227, 76, 134, 246, 151, 164,
                 91, 206, 43, 141, 253, 85, 80, 147, 169, 162, 221, 98, 235, 75, 119, 32, 21, 164, 193, 252, 174,
                 206, 47, 245, 49, 97, 176, 233, 116, 123, 0, 6, 17, 83, 47, 224, 112, 95, 92, 205, 86, 176, 92, 74,
                 183, 67, 141, 36, 187, 107, 173, 195, 227, 223, 18, 226, 115, 117, 214, 241, 185, 198, 217, 206,
                 230, 67, 231, 203, 203, 39, 8, 92, 236, 181, 71, 16, 82, 192, 116, 111, 80, 156, 220, 147, 63, 150,
                 170, 19, 248, 32, 38, 8, 25, 243, 63, 193, 240, 75, 69, 218, 147, 117, 83, 89, 156, 229, 227, 240,
                 230, 146, 70, 37, 203, 175, 74, 26, 133, 140, 134, 162, 209, 244, 72, 83, 128, 104, 146, 114, 38,
                 54, 47, 179, 111, 129, 9, 210, 62, 16, 130, 44, 161, 165, 54, 199, 219, 0, 198, 171, 75, 107, 103,
                 8, 32, 61, 158, 42, 59, 52, 146, 76, 197, 195, 157, 121, 199, 74, 253, 19, 84, 151, 173, 166],
                [2, 134, 97, 217, 86, 28, 0, 217, 135, 229, 219, 181, 68, 121, 207, 243, 113, 32, 15, 139, 190, 27,
                 46, 119, 141, 242, 10, 72, 239, 114, 33, 141, 141, 48, 102, 237, 184, 99, 228, 153, 110, 109, 233,
                 120, 148, 3, 172, 162, 252, 158, 119, 193, 239, 2, 35, 47, 4, 190, 87, 6, 63, 111, 180, 238, 43,
                 50, 14, 97, 180, 2, 169, 20, 192, 221, 177, 242, 195, 125, 147, 79, 22, 141, 35, 63, 18, 56, 86,
                 121, 2, 243, 16, 50, 141, 1, 208, 138, 159, 186, 24, 180, 171, 100, 153, 233, 99, 38, 184, 251,
                 156, 83, 241, 26, 13, 192, 188, 187, 202, 23, 28, 163, 18, 89, 84, 90, 123, 11, 30, 12, 52, 205,
                 253, 240, 185, 243, 155, 148, 128, 12, 213, 138, 139, 28, 181, 99, 29, 194, 132, 254, 143, 62, 29,
                 232, 116, 237, 253, 100, 81, 118, 252, 203, 56, 91, 91, 52, 184, 172, 46, 14, 19, 36, 127, 55, 99,
                 175, 77, 17, 162, 193, 204, 152, 14, 19, 125, 175, 51, 249, 196, 13, 223, 83, 51, 218, 100, 188,
                 38, 5, 203, 104, 18, 72, 151, 95, 101, 15, 135, 87, 37, 244, 186, 195, 237, 24, 154, 32, 182, 104,
                 205, 247, 81, 3, 19, 249, 111, 168, 6, 171, 232, 43, 177, 120, 172, 175, 155, 245, 16, 214, 202,
                 108, 32, 108, 254, 196, 54, 237, 200, 79, 164, 118, 217, 103, 90, 17, 240, 181, 221, 11, 157]]
        }
    },
    "requested_proof": {
        "revealed_attrs": {"attr1_referent": {"sub_proof_index": 0, "raw": "Alex",
                                              "encoded": "1139481716457488690172217916278103335"}},
        "unrevealed_attrs": {},
        "self_attested_attrs": {},
        "predicates": {"predicate1_referent": {"sub_proof_index": 0}}
    },
    "identifiers": [{"cred_def_id": "", "schema_id": ""}]
}


@pytest.mark.asyncio
async def test_verifier_verify_proof_works_for_correct_proof(proof_req, credential_def, gvt_schema, gvt_schema_id,
                                                             issuer_1_gvt_cred_def_id):
    schemas = {
        gvt_schema_id: gvt_schema
    }

    credential_defs = {
        issuer_1_gvt_cred_def_id: credential_def
    }

    proof["identifiers"][0]["schema_id"] = gvt_schema_id
    proof["identifiers"][0]["cred_def_id"] = issuer_1_gvt_cred_def_id

    valid = await verifier_verify_proof(json.dumps(proof_req), json.dumps(proof),
                                        json.dumps(schemas), json.dumps(credential_defs), "{}", "{}")

    assert valid


@pytest.mark.asyncio
async def test_verifier_verify_proof_works_for_proof_does_not_correspond_to_request(credential_def, gvt_schema,
                                                                                    gvt_schema_id,
                                                                                    issuer_1_gvt_cred_def_id):
    from tests.anoncreds.conftest import proof_req
    xproof_req = proof_req(180)

    schemas = {
        gvt_schema_id: gvt_schema
    }

    credential_defs = {
        issuer_1_gvt_cred_def_id: credential_def
    }

    proof["identifiers"][0]["schema_id"] = gvt_schema_id
    proof["identifiers"][0]["cred_def_id"] = issuer_1_gvt_cred_def_id

    with pytest.raises(IndyError) as e:
        await verifier_verify_proof(json.dumps(xproof_req), json.dumps(proof),
                                    json.dumps(schemas), json.dumps(credential_defs), "{}", "{}")

    assert ErrorCode.CommonInvalidStructure == e.value.error_code


@pytest.mark.asyncio
async def test_verifier_verify_proof_works_for_wrong_proof(proof_req, credential_def, gvt_schema, gvt_schema_id,
                                                           issuer_1_gvt_cred_def_id):
    schemas = {
        gvt_schema_id: gvt_schema
    }
    credential_defs = {
        issuer_1_gvt_cred_def_id: credential_def
    }
    proof["identifiers"][0]["schema_id"] = gvt_schema_id
    proof["identifiers"][0]["cred_def_id"] = issuer_1_gvt_cred_def_id
    proof["proof"]["aggregated_proof"]["c_hash"] = "111111111111111"

    valid = await verifier_verify_proof(json.dumps(proof_req), json.dumps(proof),
                                        json.dumps(schemas), json.dumps(credential_defs), "{}", "{}")

    assert not valid
