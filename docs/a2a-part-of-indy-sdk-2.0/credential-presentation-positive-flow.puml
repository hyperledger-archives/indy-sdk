@startuml
skinparam ParticipantPadding 20
skinparam BoxPadding 20

title Credential Presentation
scale 0.9

box "Prover" #LightBlue
actor "Prover" as P
participant "State Machine" as PSM
participant "Libindy API" as PLA
participant "Message Family Helpers" as PH
endbox

box "Verifier" #LightBlue
actor "Verifier" as V
participant "State Machine" as VSM
participant "Libindy API" as VLA
participant "Message Family Helpers" as VH
endbox

V -[#blue]> VSM: <b> initialize
VSM -[#blue]-> VSM: state: <b> Initialized

V -[#grey]-> V: application logic
V -[#grey]-> V: create presentation request
V -[#grey]-> V: application logic
V -[#green]> VH: <b> prepare presentation request message
VH -[#blue]> VSM: <b> do step for presentation request message
VSM -[#blue]-> VSM: state: <b> PresentationRequestCreated
VSM -[#blue]-> V: presentation request message
V -[#grey]-> V: application logic
V -[#green]> P: <b> send presentation request message
V -[#grey]-> V: application logic

P -[#blue]> PSM: <b> initialize
PSM -[#blue]-> PSM: state: <b> Initialized

P -[#green]> PH: <b> parse message
P <-[#green]- PH: presentation request
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for presentation request
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for presentation request
PSM -[#blue]-> PSM: state: <b> PresentationRequestReceived
P -> PLA: <b> indy_prover_search_credentials_for_proof_req
PLA --> P: libindy credentials for presentation request
P -[#grey]-> P: application logic
P -> PLA: <b> indy_prover_create_proof
PLA --> P: libindy proof
P -[#grey]-> P: application logic
P -[#green]> PH: <b> prepare presentation message
PH -[#blue]> PSM: <b> do step for presentation message
PSM -[#blue]-> PSM: state: <b> PresentationCreated
PSM -[#blue]-> P: presentation message
P -[#grey]-> P: application logic
P -[#green]> V: <b> send presentation message
P -[#grey]-> P: application logic

V -[#green]> VH: <b> parse message
V <-[#green]- VH: presentation
V -[#grey]-> V: application logic
V -[#blue]> VSM: <b> check transition for presentation
VSM -[#blue]-> V: is_transition_acceptable
V -[#blue]> VSM: <b> do step for presentation
VSM -[#blue]-> VSM: state: <b> PresentationReceived
V -[#grey]-> V: application logic
V -> VLA: <b> indy_verifier_verify_proof
VLA --> V: libindy validity
V -[#grey]-> V: application logic
V -[#green]> VH: <b> prepare presentation ack message
VH -[#blue]> VSM: <b> do step for presentation ack message
VSM -[#blue]-> VSM: state: <b> PresentationAckCreated
VSM -[#blue]-> V: presentation ack message
V -[#grey]-> V: application logic
V -[#green]> P: <b> send presentation ack message
V -[#grey]-> V: application logic
V -[#blue]> VSM: <b> do step
VSM -[#blue]-> VSM: state: <b> Finished
V -[#grey]-> V: application logic

P -[#green]> PH: <b> parse message
P <-[#green]- PH: presentation ack message
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for presentation ack message
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for presentation ack message
PSM -[#blue]-> PSM: state: <b> PresentationAckReceived
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> do step
PSM -[#blue]-> PSM: state: <b> Finished
P -[#grey]-> P: application logic

@enduml
