@startuml
title Common A2A State Machine definition
scale 550 width

[*] --> Initialized

state Initialized {
}

state CheckTransitionToMessageCreated <<choice>>

note left of CheckTransitionToMessageCreated :  if transition allowed?

Initialized -down-> CheckTransitionToMessageCreated: message
CheckTransitionToMessageCreated -down-> MessageCreated: ok: step(message)
CheckTransitionToMessageCreated -up-> Initialized: no

state MessageCreated {
    MessageCreated: message type
}

state CheckTransitionToMessageSent <<choice>>

note left of CheckTransitionToMessageSent :  if transition allowed?

MessageCreated --> CheckTransitionToMessageSent: message
CheckTransitionToMessageSent --> MessageSent: ok: step(message)
CheckTransitionToMessageSent --> MessageCreated: no

state MessageSent {
    MessageSent: message uuid
    MessageSent: message type
}

state CheckTransitionReplyReceived <<choice>>

note left of CheckTransitionReplyReceived :  if transition allowed?

MessageSent --> CheckTransitionReplyReceived: message
CheckTransitionReplyReceived --> ReplyReceived: ok: step(message)
CheckTransitionReplyReceived --> MessageSent: no

state ReplyReceived {
    ReplyReceived: message type
}

state CheckForFinish <<choice>>

note left of CheckForFinish :  if is the next iteration?

ReplyReceived --> CheckForFinish: check
CheckForFinish --> [*]: no
CheckForFinish --> ReplyReceived: yes

ReplyReceived --> CheckTransitionToMessageCreated: message

@enduml