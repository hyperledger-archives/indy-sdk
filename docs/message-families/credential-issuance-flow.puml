@startuml
skinparam ParticipantPadding 20
skinparam BoxPadding 20

title Credential Issuance
scale 0.8

box "Issuer" #LightBlue
actor "Issuer" as I
participant "State Machine" as ISM
participant "Libindy API" as ILA
participant "Message Family Helpers" as IH
endbox

box "Prover" #LightBlue
actor "Prover" as P
participant "State Machine" as PSM
participant "Libindy API" as PLA
participant "Message Family Helpers" as PH
endbox

=== Credential Issuance ==

I -> ISM: <b> initialize
ISM -> ISM: state: <b> Initialized
I -[#grey]-> I: application logic
I -> ILA: <b> indy_issuer_create_credential_offer
ILA --> I: libindy cred_offer
I -[#grey]-> I: application logic
I -[#green]> IH: <b> prepare credential offer message
IH -[#green]-> I: credential offer message
I -[#grey]-> I: application logic
I -[#blue]> ISM: <b> check transition for cred_offer_message
ISM -[#blue]-> I: is_transition_acceptable
I -[#blue]> ISM: <b> do step for cred_offer_message
ISM -[#blue]-> ISM: state: <b> OfferCreated
I -[#grey]-> I: application logic
I -[#green]> IH: <b> send A2A message
IH -[#green]> I: response
I -[#green]> IH: <b> parse response
I <-[#green]- IH: response
I -[#grey]-> I: application logic
I -[#blue]> ISM: <b> check transition for response
ISM -[#blue]-> I: is_transition_acceptable
I -[#blue]> ISM: <b> do step for response
ISM -[#blue]-> ISM: store message uuid
ISM -[#blue]-> ISM: state: <b> OfferSent
I -[#grey]-> I: application logic

P -> PSM: <b> initialize
P -[#green]> PH: <b> check for messages
PH -[#green]-> P: message
P -[#green]> PH: <b> parse message
P <-[#green]- PH: cred offer
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for cred offer
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for cred offer
PSM -[#blue]-> PSM: state: <b> OfferReceived
P -> PLA: <b> prover_create_credential_request
PLA --> P: cred_req
P -[#grey]-> P: application logic
P -[#green]> PH: <b> prepare credential request message
PH -[#green]-> P: cred_req_message
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for cred_req_message
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for cred_req_message
PSM -[#blue]-> PSM: state: <b> CredentialRequestCreated
P -[#grey]-> P: application logic
P -[#green]> PH: <b> send A2A message
P <-[#green]- PH: response
P -[#green]> PH: <b> parse response
P <-[#green]- PH: response
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for response
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for response
PSM -[#blue]-> PSM: store message uuid
PSM -[#blue]-> PSM: state: <b> CredentialRequestSent
P -[#grey]-> P: application logic

I -[#green]> IH: <b> check reply for uuid
IH -[#green]-> I: reply
I -[#green]> IH: <b> parse reply
I <-[#green]- IH: cred request
I -[#grey]-> I: application logic
I -[#blue]> ISM: <b> check transition for cred request
ISM -[#blue]-> I: is_transition_acceptable
I -[#blue]> ISM: <b> do step for cred request
ISM -[#blue]-> ISM: state: <b> RequestReceived
I -[#grey]-> I: application logic
I -> ILA: <b> indy_issuer_create_credential
ILA --> I: credential
I -[#grey]-> I: application logic
I -[#green]> IH: <b> prepare credential message
IH -[#green]-> I: cred_message
I -[#grey]-> I: application logic
I -[#blue]> ISM: <b> check transition for cred_message
ISM -[#blue]-> I: is_transition_acceptable
I -[#blue]> ISM: <b> do step for cred_message
ISM -[#blue]-> ISM: state: <b> CredentialCreated
I -[#grey]-> I: application logic
I -[#green]> IH: <b> send A2A message
IH -[#green]-> I: response
I -[#green]> IH: <b> handle response
I <-[#green]- IH: response
I -[#grey]-> I: application logic
I -[#blue]> ISM: <b> check transition for response
ISM -[#blue]-> I: is_transition_acceptable
I -[#blue]> ISM: <b> do step for response
ISM -[#blue]-> ISM: store message uuid
ISM -[#blue]-> ISM: state: <b> CredentialSent
P -[#grey]-> P: application logic

P -[#green]> PH: <b> check reply for uuid
PH -[#green]-> P: reply
P -[#green]> PH: <b> parse reply
P <-[#green]- PH: credential
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for credential
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for credential
PSM -[#blue]-> PSM: state: <b> CredentialReceived
P -> PLA: <b> prover_store_credential
PLA --> P: uuid
P -[#grey]-> P: application logic
P -[#green]> PH: <b> prepare credential ack message
PH -[#green]-> P: cred_ack_message
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for cred_ack_message
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for cred_ack_message
PSM -[#blue]> PSM: state: <b> CredentialAckCreated
P -[#grey]-> P: application logic
P -[#green]> PH: <b> send A2A message
PH -[#green]-> P: response
P -[#green]> PH: <b> parse response
P <-[#green]- PH: response
P -[#grey]-> P: application logic
P -[#blue]> PSM: <b> check transition for response
PSM -[#blue]-> P: is_transition_acceptable
P -[#blue]> PSM: <b> do step for response
PSM -[#blue]-> PSM: state: <b> CredentialAckSent
P -[#grey]-> P: application logic
PSM -[#blue]-> PSM: state: <b> Finished
P -[#grey]-> P: application logic

I -[#green]> IH: <b> check reply for uuid
IH -[#green]-> I: reply
I -[#green]> IH: <b> parse reply
I <-[#green]- IH: credential ack
I -[#grey]-> I: application logic
I -[#blue]> ISM: <b> check transition for credential ack
ISM -[#blue]-> I: is_transition_acceptable
I -[#blue]> ISM: <b> do step for credential
ISM -[#blue]-> ISM: state: <b> CredentialAckReceived
I -[#grey]-> I: application logic
ISM -[#blue]-> ISM: state: <b> Finished
I -[#grey]-> I: application logic

@enduml
